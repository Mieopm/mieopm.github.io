<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My New Post</title>
    <url>/2023/06/25/My-New-Post/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>24jyy正课笔记——（二）并发</title>
    <url>/2024/09/20/2024jyyos%20%EF%BC%88%E4%BA%8C%EF%BC%89%E5%B9%B6%E5%8F%91/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>技术</category>
        <category>基础类</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Turned out -later</title>
    <url>/2023/07/27/Turned%20out%20-later/</url>
    <content><![CDATA[<p>​​*这是一个号主狂草假想的平行宇宙，各种设定会与原作有所出入，两人前期都会有一定的ooc，看下去就知道原因了</p>
<p>*设定中格劳克斯的处境与游戏中截然不同，本作中格劳克斯因为“外骨骼改造”获得超凡的腿部能力，而不是像原作因为腿部衰退才用外骨骼辅助，所以性格转变更大。</p>
<p>*号主集训，关键揭秘部分还在编写，不过这些很明显的伏笔大家都能看出来吧 </p>
<p>我很少能享受这样一个质朴的集市，难得单纯地好奇心一不小心流连忘返地徘徊于歪斜店门与门口不平整的小地摊之间，在谈天谈地的老年人的闲语间，恍然购入了许多事后总要烦恼怎么处置的食材。还好大爷大妈总劝说着一定要吃新鲜的，所以手里拎着的东西虽然杂七杂八，但是加起来也就一个满满的塑料袋的分量，不会给回去的行程添太多的麻烦。临近市场入口的卖特产小吃的卷发大妈见到我倒是有点吃惊：“欸，小姑娘你买那么多，一顿吃不完得嘞！”</p>
<p>“有人一起吃的啦”</p>
<p>“哦，那倒还好嘞，是要和人过节吧！”</p>
<p>“节日？最近有什么节日吗？”</p>
<p>“啊，外地人嘛，是我们当地的一个节日，叫往生节，大致上来说当成龙门的安魂节就是啦~”</p>
<p>“这样子啊，第一次听说，谢谢阿姨。”</p>
<p>来到了约定的桥墩底下，却不见人影。雨后的天气还是太闷热了，我本身覆着一层湿气的皮肤又成了累赘，于是随着日照的阴影无聊地挪动步伐，慵懒地倚着冷硬的石壁，只想等她自行出现。夕阳染着昨日遗留的积水像葡萄酒的血，这会吸引爱好品酒的她出现了。不过她喜欢的是威士忌来着，还是风味比较独特的谷壳威士忌。</p>
<p>一时寂寥无声，突然像是坏掉的农具车般吱呀的声音从远处狂啸着靠近，突然又自行隐去，下一瞬间格劳克斯翻越了高大的稻田岸坡，若无其事地踢踏着张扬的彩绘外骨骼出现在我面前。她绕过我的身后戳戳塑料袋。</p>
<p>“买了菜了啊，都是当地很有滋味的菜欸，肯定很和我口味。”</p>
<p>“嗯，等待任务开始期间还劳烦你的照顾了。”</p>
<p>“很期待呢，既然蓝毒小姐做的甜品都那么好吃。那么厨艺肯定也不在话下。”</p>
<p>“想吃就说，少隔这拍马屁。”这就是我想等她自行出现的理由，尽管她是难得的那个想吃的人，可是我不擅长对付这个人。“你又是跳上来的，能力真的是超出我的想象。”</p>
<p>而且她和我预想中的完全不是一个人。在我预想中的她软软的，却坚毅不屈。而不是仿佛玩透了世界的规则的高人姿态。虽然我不知道为什么我会对还未见面的人就烙下了深深的刻板印象，但是挨不住我那来自毒素神经的直觉。这个人，哪里都很变扭。 </p>
<p>“蓝毒小姐总是把我想的太弱了，这对任务执行时的判断很不利。还请你判断的时候自觉在程序的判断条件中把你想象中的我的战力乘以二呢。”</p>
<p>“好了知道了，快走吧，等了你好久，好热。”</p>
<p>“毕竟是安努拉呢。那我带你去一个比我家更凉快的地方。”</p>
<p>“别告诉我是酒吧。”</p>
<p>“正解。不过这次去真的是正事啦。菜的问题你不用担心，和我家的方向是顺路的。”</p>
<p>“怪机灵的啊。”</p>
<p>“被逼的嘛，我们虽然不算同行，也算是同个业内的人，蓝毒小姐现在不明白的话，以后肯定会明白的。”</p>
<p>我婉拒了格劳克斯背着我前进的邀请。她领着我一路钻入羊肠小巷，拐过几次几乎才通人的弯，进入了这个几乎全是包厢的酒吧。她没骗人，冷气确实足够隔离门外的湿热。我们走进的包厢内对排已经坐了两位人，一位女性黑衣线人阿拉比和一位男性丰蹄技师马尔普斯。我只能和格劳克斯坐狭隘的一排。马尔普斯自我介绍说格劳克斯流落时期就相识的旧友人，由于他大部分技能都是一开始追随格劳克斯学到了，开玩笑地说格劳克斯的本业应该也是技师才对。我无意识地想象她对着自己的外骨骼腿敲敲打打改造的场景，反倒觉得怪合适的。</p>
<p>而阿拉比是个只做分内事的人，只扼要地告诉我们目标会在咖达镇举行的往生祝贺派对上出现，交代了一下上面要求活捉，也不告诉我们更多具体的内幕就起身走了，留下三个行动者讨论方案。虽然，没有什么纠葛的脏活是不存在的。</p>
<p>格劳克斯突然轻轻拉过我的耳朵，轻声细语地耳语道：“大体来说，少知道些情报对我们都有好处。”</p>
<p>瘙痒的温热与话中话有点吓我一跳，但我还是忍住了捂住耳朵的冲动，有些嗔怪地反问道：“你在说什么？”</p>
<p>“没什么，猜了猜蓝毒小姐在想什么。想回应一下嘛。”</p>
<p>“你就是这种地方……算了，继续说正事吧。”</p>
<p>“虽然我觉得没什么好说的，大部分情况还是只能随机应变。服务员，来两杯典窖麦壳威士忌。”</p>
<p>“……好歹给我介绍一下那个派对的情况吧，我人生地不熟的。”</p>
<p>因为酒吧特殊性质的原因，酒是通过一个小小的窗口塞进包厢的托盘。坐在窗口的格劳克斯拿起了她最爱的双份威士忌……额，怎么其中一瓶挪到我面前了。</p>
<p>“试试看嘛，我想要蓝毒小姐也喜欢上我喜欢的东西。”</p>
<p>“包括我的料理吗？”</p>
<p>“当然。”</p>
<p>“好吧。”看着她期待的眼神，我无奈地举起双手。可能是出于某种种族自觉，我不怎么喝酒，虽然麦壳威士忌闻起来的谷物发酵味道重的有点发酸，但是我憋着鼻子浅浅舔了一口，意外地还可以接受。“所以说格劳克斯，你们这的往生祝贺派对到底是？”</p>
<p>她的视线轻微地躲闪了一丝：“额，其实我也不是很清楚，就是了……我过的还是龙门的安魂节，只听说往生祝贺派对是与死者共舞以庆贺来日的派对。”</p>
<p>我将询问的目光转到马尔普斯，他只是晃着对于丰蹄略显小巧的双角：“我也仅限于了解的程度。因为往生派对基本都是和自己认识的死者共舞，而我作为孑然一身打拼来的人，在当地没有死去的好友或者亲属，所以没参加过。”</p>
<p>我忍不住叹了一口气，“那会场地图总有吧。我得视情况准备一些人的麻醉剂或者一群人的麻醉剂。”</p>
<p>马尔普斯扯开一张皱巴巴的纸头：“那还是有的，线人给的。你们看，目标的爵士被分配在派对右上角的草坪，根据推测的路线图他在最开始访问一圈人后就会一直待在那里，正常情况下你只需要做一些人的麻醉剂放倒几个麻烦的家伙就可以了。”</p>
<p>“看起来这整个会场还是在一个小山坡上？另一种意义上挺方便。”</p>
<p>格劳克斯插嘴：“尤其是对我的腿来说。”</p>
<p>“好了，你也快来给点意见，吃掉一切踪迹的蓝色走狗。”</p>
<p>格劳克斯顿时放下了仰天的酒杯：“虽然这个外号还挺不错，但是谁是狗了？！”</p>
<p>“我只是打听地下线索顺带听见的外号——”</p>
<p>最终还是决定通过上面的一些关系，正面混入这个“自我陶醉”的派对。马尔普斯依旧不能入场。只能作为场外援助。因为入场的条件是携带一件以上熟悉的死者的生前所有物并加以验证，纵使权势力量再强大的人，都不能差遣任何一个早已信游他乡的魂灵替你伪证。即使有例外发生，但是因为这里是泰拉，也不值得我去大惊小怪了。</p>
<p>准备入场的我和格劳克斯替换了各自的私服，我是穿了当素人模特时被淘汰的马甲套，她则有些反常的抛弃了自己轻便地行动装。下半身是昨日的麻色短裤，外骨骼换了一套行动专用的暗钢色，上半身却严严实实地包裹着发胖的塑胶外衣，乍一看像是夏日的棉袄大衣；甚至还带着毛毡帽子，露出的一对软趴趴的触角大口大口地呼吸布料外侧的空气。唔……捏捏。</p>
<p>“格劳克斯，该去派对了”再捏捏。</p>
<p>“额，嗯。”她的头埋进衣物里，有气无力地应了一声。</p>
<p>“唔，要我拉着你走吗？”</p>
<p>“嗯，好，麻烦蓝毒小姐了。”</p>
<p>……怪合适的。</p>
<p>“我抓住你的手腕吧，左手，递过来。”</p>
<p> 她像是可怜的流浪小狗，乖乖地将手交付于我的掌心。刻意停留了几秒，她也没有突然反悔地抽回手。我合拢了手，轻松地擒住了一双沾染了无数的血渍却依旧柔软熟悉的手腕。     </p>
<p>坡道的入口像模像样地安设几个用于大型活动的围栏与闸门，但并不是传统地大包小包过安检。替代X光机的是一排峻黑的遮光屋，四角遍布着精致的花纹，可能是出于隐私保护，一次只能进一个人。我本来想趁机挖苦她以回敬前些天那颗高傲的头颅，但放开格劳克斯的手之前，我却顺势改了口：“我会在门口等你的。”</p>
<p>“嗯……不了，还是让我在门口等你吧，我先进去。”</p>
<p>她捂着外衣内侧的口袋缓步挪入房间，大概率放的是入场的同行证吧，不知道她携带的所有物是什么呢，以至于她要用黑色大衣严严实实地捂着。我倚着小屋的杆子等候，放缓了心跳，可几乎听不见屋内的动静。</p>
<p>大约三十秒后通行员招呼我“检票”，并递交我一条白纱围巾便急不可耐地将我推入门内，能真正将一切视线吸入的黑暗包裹了我。白纱围巾被突然冒出的悬浮之白手伶俐地抽走并宽松地绕在我的脖子上，随后摊着手和我讨要什么东西。我解下脖子上前队友的狗牌交给了它，接触的一瞬起，星星点点的亮光逐渐密密麻麻，众多小小的光束凝结的光晕遮盖纯黑的夜空，热情得好似水星的太阳，但还在不断膨胀逼近我的眼球——可在我慌忙闭眼前就坍缩。</p>
<p>那是虚假的光！这不可能是源石技艺，更像是改造后的莱塔尼亚巫艺鉴定，可怎么会出现在东国的僻壤。我仍然发楞，一时间分不清虚实，隐隐约约中手推着我过门，算是通过了入场门槛。我问托着我肩膀的格劳克斯看见的和我是一样的东西吗，她反问我看见了什么，我如实地描述一遍，她却默不作声，比进入前更加惘然地死死盯住大地。许久，她才开口。</p>
<p>“你也挺奇特的，进来的景象居然不是通常的和死者打招呼，而是宛如宇宙大爆炸再现的场景。”</p>
<p>“意思是说，格劳克斯你该不会真的看见死者的鬼魂了吧？”</p>
<p>“不是，这里的大家都能遇见死者的鬼魂，这没什么好奇怪，更没什么好害怕的……”</p>
<p>“所以，你怕鬼吗？”</p>
<p>“一半一半吧……其实我定居这里的第一年，我还是参加过往生派对——的一次开头。我携带的是我父母的遗物，但是我遇见的鬼魂伴侣不是父母，而是一个影怪。”</p>
<p>“会不会是因为外地人的关系？”</p>
<p>格劳克斯维持着缄默，干脆地推开了更加摸不着头脑的我，自顾自地大步流星地前往会场。即时她又恢复别扭的性格，我却忍不住担心她的状况，很难不怀疑她和这个节日没有什么特别不巧的过节，她为什么还要接下这个任务？尽管好奇，但是当下不适合我多加过问，没准参加这个派对，一切都会顺其自然的下去吧，于是我也尽可能快步地跟上她。</p>
<p>现在我们终于揭开了会场的最后一层的面纱，踏足山坡上的草坪派对。虽然我不太了解建筑风格，其间布置的高脚餐桌、装饰的雕塑与石英石柱以及花卉与精致喷泉无一不透露古代智者般典雅又自由的气息，模糊的魂灵身形随着我们越来越接近属于自己的区域而逐渐显形，若无所依的空鱼自在的在我身旁游荡，调皮地来回穿梭我的身体，左右眺望其他参加者身边的魂灵却只能看见一个模糊的团块。真不可思议啊，我向曾经的战友深靛挥挥手致意，她也欢欣鼓舞地甩手打招呼。我很庆幸，往生的她回到了最初对生命的活力执着而痴迷的模样，而非死时过分沉重的壮烈满怀。当时擅自替她怀揣的遗憾，如今终于从我的脑海中彻底抹去。不适合她的始终是不值得被纪念的。</p>
<p>但是我在执行任务中独自沉迷多少太松懈了，反观格劳克斯已经挑选了一张最高的椅子，翘着二郎腿侦察实际的环境。不，顺着她的视线望去，正是在和他人客套的任务目标。</p>
<p>“我们这个位置是场地最左上角的地方，你先靠到我的背后进行装弹。”</p>
<p>“嗯。”我掀开袖口，打开分配到的特殊装备的盖板——符合军标威力的制式折叠臂驽——塞入一打自制的药丸麻醉弹，其他三个备用弹夹也塞满了弹药，均为命中即倒地的药量，不可能不够用。</p>
<p>因为不是什么野地帮派对殴或者偷袭敌营的大任务，这些准备工作就足矣。剩下的时间都是在等候时机，或者说，等格劳克斯的发令。虽然她之前说自己的魂灵是黑色影怪，但我看见的却是同她发色般的深蓝色。我试着用心声问了问深靛她看见的是什么，也请深靛问问其他魂灵同样的问题，都说确实是黑色的影怪。“这个影怪的剪影很像她本人，她本人的魂灵很错乱，像是两种可能性在打架。”，深靛补充道。</p>
<p>……</p>
<p>尽管谜团更多了，但是当下不适合我多加过问。</p>
<p>沉默的舞会中，大多数人与自己身边的魂灵为伴起舞，即使少有的说话声，也生怕打扰到他人。些许时间后，格劳克斯突然咋舌一声：“不好，他比预想中的路线更快的返回了。你分我一个备用弹夹，我先绕路埋伏，你马上！”我从背后递交弹夹后，椅子上的人就转瞬消匿了。原来她能隐去吱呀的机械脚步声音，嗯，我得把她的能力按预想中的两倍计算。</p>
<p>爵士分配到的场地由一圈茂密高耸的花坛严实地包了三层，使得它成为开放场地的唯一天然包厢。听内部的脚步声最多只有三种。我预想三个人不同的站位该怎么速射时，意想不到的人拦在了门口，是马尔普斯，携带着一个类似电磁枪的重型老式武器，他精瘦的身躯顿然显得小巧，但还是靠着丰蹄天生的力量将武器稳稳当当地架起。</p>
<p>“虽然没有很严格的安检，但是这显然不是能正常拿进来的东西，马尔普斯。”我背着手展开了臂弩。</p>
<p>丰蹄不屑地喷鼻气：“哼，所以我是非法拿进来的，这个回答你满意吗安努拉。”</p>
<p>表面上没有明说，但是他已经完全表明了自己的态度，彻头彻尾地故意挑衅。我不加犹豫，反手送他一发今日的第一弹，但弹药在最后一刻像撞上无形的屏障，激烈地颤抖挣扎，直到失去动力应然落地。局势不对，我迅速藏身在花坛后，心里嘟囔道：“自带小范围磁力场……”</p>
<p>马尔普斯没有激进地追杀，而是像第一次获得胜利的毛头小子般炫耀地大声喊叫：“是啊，如果你想要通过，只能赤手空拳地近身格斗了，嘛，这样子即使我不会任何格斗技巧也是妥妥的顺风局，丰蹄的力量绝非笑话。赶紧考虑吧，否则你只有被我射击的份了。顺带一提，不要指望你的搭档用她那笨重的铁腿来打败我比较好。”</p>
<p>“你为什么那么做？格劳克斯不是你人生地不熟时就与你一同生存战斗的伙伴吗？不是你自己说你的很多技术都是更她学的吗？”</p>
<p>“虽然具体和你讲了你也不会明白，但是原因很简单，”我听见马尔普斯按耐不住偷悦地搓揉手指的声音，“我曾经的归属被格劳克斯夺走了，现在有新的归属邀请的加入，而加入的条件正好是活捉格劳克斯。”我隔着花坛的洞眼，看他捡起了刚刚被拦截的麻醉弹药，塞进了自己的小手枪里。“在我们这弄到小而劲的麻醉弹药几乎不可能，我就先借一下现成的了。安努拉，在密集的电击射线下起舞吧！”狂妄的攻击宣言给电磁枪卸下保险栓，马尔普斯手在板扣疯狂地连续扣压。我根据深靛通过心念即时传达的信息，快速地沿环外侧顺时针奔跑，但是却没有闻到一点点植物被烧焦的呛人气味。</p>
<p>深靛指了指里面：“格劳克斯出来了。”</p>
<p>“不好，得赶紧告诉她磁力场的存在！”我以弩臂撕扯出花坛的一道小口，横穿入室内，但入口已经有一具昏迷倒下的人，可恶，没更多选择了！我一边更换弹药一边冲锋，对着最有特征的牛角下方打出一串实心橡胶弹，堪堪击中。马尔普斯明显地被惹恼：“都说了外人不懂还来坏事！？”同时一发亮光正对我袭来，我躲闪不及。幸运地是，它又在半途戛然而止了。</p>
<p>“格劳克斯的老家伙怎么关键时刻总是不灵光，<em>龙门粗口</em>。”</p>
<p>“那当然是我有意把它设计成只在我手下才会听话的样子。”</p>
<p>格劳克斯按着一个没有任何图标的遥控器、拖着两个昏倒的人从内部走出，其中一具是爵士。她狠狠地摔烂遥控器，将他们搁置到一旁，不疾不徐地走向马尔普斯的枪口。“尽管我劝阻了你那么久，你还是选择了另一条路。很抱歉失去你，伙伴。但这也是我最后一次称呼你为伙伴了，马尔普斯。”</p>
<p>“格劳克斯，小心他的强磁场！”</p>
<p>“我知道，我会脱下我的外骨骼。不过需要蓝毒小姐帮忙争取十几秒的时间。他的电磁枪威力已经被我限位限死了，你放心上就是了。”</p>
<p>“你们大声密谋是纯纯地把我当白痴耍，啊！？先把你撂倒了！”</p>
<p>马尔普斯掏出小手枪射击格劳克斯，命中了左侧胳膊。“芜湖！”他大功告成地重重抛下电磁枪：“安努拉，这个药效要多久生效啊？”像是观看电影的结局般，目无旁人地盯着半瘫软的格劳克斯。</p>
<p>他真的很碎嘴啊，作为一个想干点坏事的人来说。我加上了最后一颗实心橡胶弹，瞄准他的后颈。“很遗憾，永远不会生效。”发射。紧接着，一声沉重的金属敲击声，一声仪器瘫痪的电流声。虽然肉眼不可见，但是我可以确信，烦人的磁场已经结束了。“格劳克斯，趁现在！”</p>
<p>格劳克斯瘫软的肌肉瞬间绷紧，驱动双腿如蝗虫般高高跃起，不偏不倚地落在马尔普斯的身后，依旧是弩口顶着后脖颈注入一发麻醉弹药。马尔普斯终于很干脆地倒地不起。</p>
<p>“任务目标，双倍丰收。配合很棒，蓝毒小姐~”</p>
<p>线人驾驶箱车抵达收获，她只肯收爵士，最多再稍我们两一程，对于随意横躺地上的马尔普斯和其他两个不认识的家伙置之不理。格劳克斯嘴皮子说了五分钟请求线人只要再多带走一个马尔普斯，还是因为交付时限要来不及了被不顾抗议地硬生生塞到车上。</p>
<p>我一边踏上车，一边踩着地面，熙熙攘攘的魂灵团块像云朵般收缩积压，绵绵荡荡卷送几朵彼岸安宁的浪花白沫予世间，与自己前浪的舞蹈的人们是多么快活，是多么陶醉。“我最后问一下，离开这个场地之后，魂灵就会消失了吗？”</p>
<p>“准确来说不是消失，只是回彼岸养精蓄锐，静等和你的下一次见面。”</p>
<p>“这样啊，谢谢。”</p>
<p>我深吸一口气，学深靛的精神气向面容些许模糊的她大大地挥手，‘下次再见’。</p>
<ul>
<li></li>
</ul>
<p>爵士被医师用原始的手段强制清醒之后，就被巫师模样的家伙带到一个特殊的封闭小房间。我一直假设我们需要活捉他的理由是因为他们需要审问出证言，但随后我就知道并非如此。因为他们也把我和格劳克斯一起请进一个类似功能的房间了，只不过是会客室规格的房间，而不是小牢房。</p>
<p>房间里，盘坐在主位的还是线人阿拉比。她摘下了黑衣的帽兜，露出一对不知是哪一族的冲天闪电角。她看着我们犹豫的伫立在门口，无奈地摆手请我们进来：“好了好了不用一副惊讶的表情瞪我了，我不是什么大人物，这次还是作为线人和你们交涉罢了。”</p>
<p>我还在纳闷，格劳克斯已经冲完一杯咖啡随意地坐在客席位地沙发上，一把给我也拖进柔软的沙发里，她一板一眼地反问：“是什么委托着急得不肯让我们休息一下。”</p>
<p>“准确来说也不算是委托，是交涉，是商量，是交易。”</p>
<p>“那也请以尽量简洁快速地说明，我可不想错过和蓝毒小姐的往生节晚餐。”</p>
<p>“简单，我只需要三个问题，如果你们都回答不出来，就当作成交。第一，蓝毒看见的格劳克斯的魂灵颜色是否和其他人的不一样？”</p>
<p>格劳克斯在桌下握紧我的手，黯淡的眼神祈求我的沉默。我无法回绝，咽下了老实的回答。</p>
<p>“第二，既然格劳克斯不适应我们当地的往生节，一开始为什么又要因为往生节在我们这谋生定居？”</p>
<p>我侧目听着格劳克斯若有若无的重喘声。</p>
<p>“第三，格劳克斯，你今天携带的’所有物’是谁·的·呢·？”</p>
<p>阿拉比满脸笑容地看着格劳克斯敢怒不敢言的神情，热情地邀请她签署这场交易的同意书。</p>
<p>“如果你肯让那些好奇的巫师研究你的魂灵，你就会换来你一直苦求的人生答案。既然你这三个问题一个都答不上了，你肯定是同意的不能再同意了~交涉成立，我先走了。”</p>
<p>“等一下，我作为罗德岛的外派干员，你不需要再次和我交涉一下吗？”</p>
<p>“她要留下来知道自己的真相的时候，你会舍得不陪在她旁边吗？”</p>
<p>……不会。但是我不知道多少是出于关心，多少是出于好奇心，不敢口头作答。</p>
<p>“那，就这样。我请他们进来了。”</p>
]]></content>
      <categories>
        <category>创作</category>
        <category>文字</category>
      </categories>
      <tags>
        <tag>格蓝</tag>
        <tag>同人</tag>
        <tag>百合向</tag>
        <tag>待填坑</tag>
      </tags>
  </entry>
  <entry>
    <title>win11 搭建hexo+github以ayer为主题的个人博客</title>
    <url>/2023/06/26/blog/</url>
    <content><![CDATA[<hr>
<pre><code>本教程针对的主题是Ayer,主播建议是选好自己喜欢的主题后再进入看教程。
博客和主题安装部分通用
ayer调教部分以及遇到的bug可供参考
</code></pre>
<hr>
<h3 id="参考的教程"><a href="#参考的教程" class="headerlink" title="参考的教程"></a>参考的教程</h3><ol>
<li><p><a href="https://hexo.io/zh-cn/docs/index.html">hexo官方文档</a> 必看官方文档</p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/60578464">知乎教程</a>大部分步骤来自这里，<del>一部分懒得打字会照抄，</del>主播会省略诸如github注册操作、使用英文名等等程序员基本素养问题，<strong>只提及主要步骤做记录</strong>,有疑问可以具体查看这里</p>
</li>
<li><p><a href="https://shen-yu.gitee.io/2019/ayer/">Ayer主页说明</a>主页个性化设置</p>
</li>
<li><p>*<a href="https://www.bilibili.com/video/BV1KD4y1p7Kg/">B站教程github打包式建站</a>github比较流畅的小伙伴可以试试这个</p>
</li>
</ol>
<p><em>碎碎念</em>：主播wsl2和codespace都试过了，能成功搭建博客但是部署theme都有大大小小的问题，最终win11本地成功搭建模板化的主题，目前商在个性化修改中。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><p>hexo的安装前提是</p>
<ul>
<li><p><a href="nodejs.org/zh-cn">Node.js</a>   nodejs.org&#x2F;zh-cn(安装时自带npm平台)</p>
</li>
<li><p><a href="https://git-scm.com/downloads">Git</a>  <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>（当然以上都可以使用镜像站点下载）</p>
</li>
<li><p><em>说明：</em><br> 如果你细心的看了官方文档那么你会发现它会提及<code>Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本</code>,以及后面附带了一张hexo与Node.js版本一一对应的表格。本人的经验是可以先一律无脑最新版，大部分旧版都兼容。若主题有特殊版本要求建议按照主题的要求来。<del>虽然我没有那么做</del></p>
</li>
</ul>
<p>下载 Node.js 和 Git 程序并安装，一路点 “下一步” 按默认配置完成安装。</p>
<p>安装完成后，Win+R 输入 cmd 并打开，依次输入 node -v、npm -v 和 git –version 并回车，如下图出现程序版本号即可。</p>
<h2 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h2><p>首先你需要准备一个<strong>完全空白的文件夹</strong>（本文假设为blog）来存放hexo的程序文件。新建好后在该文件夹空白处右键选择<code>Git Bash Here</code>,这个选项可能藏在win11的<code>显示更多选项</code>。</p>
<p>npm一键安装hexo程序指令：</p>
<hr>
<pre><code>npm install -g hexo-cli
</code></pre>
<hr>
<p>如果你是mac用户需要<strong>sudo（管理员权限）</strong>来操作，例如：</p>
<hr>
<pre><code>sudo npm install -g hexo-cli
</code></pre>
<hr>
<p>安装时长视网络环境而定，可以考虑挂加速器，请耐心等待</p>
<h2 id="3-link（链接）github"><a href="#3-link（链接）github" class="headerlink" title="3.link（链接）github"></a>3.link（链接）github</h2><p>首先你已经有了一个github的免费账户并且完成了一系列验证。</p>
<p>然后回到你的blog文件夹，依旧是右键<code>Git Bash Here</code>进入到terminal，设置用户名和邮箱；</p>
<hr>
<pre><code>git config --global user.name &quot;你的gitHub 用户名&quot;
git config --global user.email &quot;你的gitHub 邮箱&quot;
（替换双引号内容）
</code></pre>
<hr>
<ul>
<li><em>说明：</em><br> 如果你遇到了<code>error: key does not contain a section: xxx</code>的报错，你可以尝试自己手写命令并输入，或者输入<code>git config --global --edit</code>手动编辑配置文件并保存。</li>
</ul>
<p><strong>然后创建SSH密匙</strong>，无脑回车到程序结束：</p>
<hr>
<pre><code>ssh-keygen -t rsa -C &quot;你的gitHub 邮箱&quot;
</code></pre>
<hr>
<p>完成后，登录github——&gt;选择右侧边栏的总setting——&gt;选择左侧边栏的SSH and GPG keys——&gt;选择New SSH keys——&gt;title取名并且附上——&gt;</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>web类</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>各种使用时新晋语法函数</title>
    <url>/2023/07/12/c++_grammer_record_/</url>
    <content><![CDATA[<h1 id="new-int-m"><a href="#new-int-m" class="headerlink" title="new int[m]"></a>new int[m]</h1><p>例：p[n]为struct,有*time，p[n].time&#x3D;new int[m],time变成int 数组，有m项</p>
<h1 id="auto"><a href="#auto" class="headerlink" title="auto"></a>auto</h1><p>for(auto t:res)cout&lt;&lt;t&lt;&lt;’ ‘;<br>auto res&#x3D;get_di(X);【vector<int> get_di(int n)】</p>
<h1 id="for（int-i-x3D-n-1-i-i–）"><a href="#for（int-i-x3D-n-1-i-i–）" class="headerlink" title="for（int i&#x3D;n-1;~i;i–）"></a>for（int i&#x3D;n-1;~i;i–）</h1><p>在for循环中，<del>i的作用是判断i是否为-1。因为-1的二进制表示是全1，所以</del>(-1)就是全0，也就是0。所以当i等于-1时，~i就为0，循环就会终止。这样可以避免使用&#x3D;&#x3D;或!&#x3D;运算符来比较i和-1。</p>
<h1 id="const-double-eps-x3D-1e-6"><a href="#const-double-eps-x3D-1e-6" class="headerlink" title="const double eps&#x3D;1e-6;"></a>const double eps&#x3D;1e-6;</h1><p>判断浮点数是否为零或者小于零时由于浮点数特性需要判断它是否小于一个很小的数</p>
<h1 id="struct结构体内比较格式"><a href="#struct结构体内比较格式" class="headerlink" title="struct结构体内比较格式"></a>struct结构体内比较格式</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> node &amp;w)<span class="type">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r&lt;w.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="amp-的传递区别"><a href="#amp-的传递区别" class="headerlink" title="* &amp;的传递区别"></a>* &amp;的传递区别</h1><h1 id="vector传递-高精度计算"><a href="#vector传递-高精度计算" class="headerlink" title="vector传递 高精度计算"></a>vector<int>传递 高精度计算</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vector&lt;int&gt; mul(vector&lt;int&gt; &amp;A, int b)</span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;int&gt; C;</span><br><span class="line">    int t = 0;</span><br><span class="line">    for (int i = 0; i &lt; A.size() || t; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        if (i &lt; A.size()) t += A[i] * b;</span><br><span class="line">        C.push_back(t % 10);</span><br><span class="line">        t /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    while (C.size() &gt; 1 &amp;&amp; C.back() == 0) C.pop_back();</span><br><span class="line">    return C;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    string a;</span><br><span class="line">    int b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    vector&lt;int&gt; A;</span><br><span class="line">    for (int i = a.size() - 1; i &gt;= 0; i -- ) A.push_back(a[i] - &#x27;0&#x27;);</span><br><span class="line">    auto C = mul(A, b);</span><br><span class="line">    for (int i = C.size() - 1; i &gt;= 0; i -- ) printf(&quot;%d&quot;, C[i]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="lower-bound-stk-begin-stk-end-arr-i-x3D-arr-i"><a href="#lower-bound-stk-begin-stk-end-arr-i-x3D-arr-i" class="headerlink" title="*lower_bound(stk.begin(), stk.end(), arr[i]) &#x3D; arr[i]"></a>*lower_bound(stk.begin(), stk.end(), arr[i]) &#x3D; arr[i]</h1><p>它返回一个指向范围 [first, last) 中第一个不小于 val 的元素的迭代器<br>可以替代二分查找</p>
<h1 id="priority-queue-lt-int-vector-greater-gt-heap"><a href="#priority-queue-lt-int-vector-greater-gt-heap" class="headerlink" title="priority_queue&lt;int,vector,greater&gt; heap;"></a>priority_queue&lt;int,vector<int>,greater<int>&gt; heap;</h1><p>优先队列是一种特殊的队列，它的元素被赋予优先级，当访问元素时，具有最高级优先级的元素先被访问12。在C++中，priority_queue是一个容器适配器，它提供了常数时间查找默认情况下最大（或最小）元素的功能，但以对数时间为代价进行插入和提取。<br>        empty()   如果队列为空返回真</p>
<pre><code>    pop()       删除队顶元素

    push()     入队一个元素

    size()      返回优先队列中拥有的元素个数

    top()        返回优先队列队顶元素
</code></pre>
<p>默认情况下，priority_queue是一个大根堆，这意味着根节点的值大于或等于子节点的值,<br>如果想要使用小根堆，可以将priority_queue的第三个参数设置为greater<int>。</p>
<p>大根堆是一种完全二叉树，其中所有父节点的值都比左右孩子的值大。小根堆与大根堆相反，其中所有父节点的值都比左右孩子的值小。<br>大根堆例如：<br>          10<br>        &#x2F;    <br>       8      7<br>     &#x2F;   \   &#x2F;<br>    6     4 3</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">是默认的大根堆实现，<span class="built_in">top</span>()是当前优先队列的最大值</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> my_array[<span class="number">10</span>] = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-8</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">-7</span>,<span class="number">-6</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        q.<span class="built_in">push</span>(my_array[i]);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;order: &quot;</span> &lt;&lt; q.<span class="built_in">top</span>() &lt;&lt; endl;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>   小根堆例如<br>          1<br>        &#x2F;    <br>       2      3<br>     &#x2F;   \   &#x2F;<br>    4     5 6</p>
<h1 id="cout-lt-lt-fixed-lt-lt-setprecison-15-lt-lt-dp-a"><a href="#cout-lt-lt-fixed-lt-lt-setprecison-15-lt-lt-dp-a" class="headerlink" title="cout&lt;&lt;fixed&lt;&lt;setprecison(15)&lt;&lt;dp[a]"></a>cout&lt;&lt;fixed&lt;&lt;setprecison(15)&lt;&lt;dp[a]</h1><p>精确输出小数点后几位</p>
<h1 id="while-cin-gt-gt-a-gt-gt-b-gt-gt-c-a-b-c-w-a-b-x3D-c"><a href="#while-cin-gt-gt-a-gt-gt-b-gt-gt-c-a-b-c-w-a-b-x3D-c" class="headerlink" title="while (cin &gt;&gt; a &gt;&gt; b &gt;&gt; c, a || b || c)w[a][b] &#x3D; c;"></a>while (cin &gt;&gt; a &gt;&gt; b &gt;&gt; c, a || b || c)w[a][b] &#x3D; c;</h1><p>用于输入多组数据且全为0时表示结束的输入</p>
<h1 id="lower-bound-、upper-bound-、equal-range-以及-binary-search"><a href="#lower-bound-、upper-bound-、equal-range-以及-binary-search" class="headerlink" title="lower_bound()、upper_bound()、equal_range() 以及 binary_search()"></a>lower_bound()、upper_bound()、equal_range() 以及 binary_search()</h1><h2 id="lower-bound"><a href="#lower-bound" class="headerlink" title="lower_bound()"></a><em>lower_bound()</em></h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在 [first, last) 区域内查找不小于 val 的元素</span></span><br><span class="line"><span class="comment">ForwardIterator lower_bound (ForwardIterator first, ForwardIterator last,</span></span><br><span class="line"><span class="comment">                             const T&amp; val);</span></span><br><span class="line"><span class="comment">//在 [first, last) 区域内查找第一个不符合 comp 规则的元素</span></span><br><span class="line"><span class="comment">ForwardIterator lower_bound (ForwardIterator first, ForwardIterator last,</span></span><br><span class="line"><span class="comment">                             const T&amp; val, Compare comp);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>     <span class="comment">// std::cout</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span>    <span class="comment">// std::lower_bound</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span>       <span class="comment">// std::vector</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//以普通函数的方式定义查找规则</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">mycomp</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span> </span>&#123; <span class="keyword">return</span> i&gt;j; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以函数对象的形式定义查找规则</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">mycomp2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> <span class="type">int</span>&amp; i, <span class="type">const</span> <span class="type">int</span>&amp; j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i&gt;j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line">    <span class="comment">//从 a 数组中找到第一个不小于 3 的元素</span></span><br><span class="line">    <span class="type">int</span> *p = <span class="built_in">lower_bound</span>(a, a + <span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*p = &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; myvector&#123; <span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">    <span class="comment">//根据 mycomp2 规则，从 myvector 容器中找到第一个违背 mycomp2 规则的元素</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;::iterator iter = <span class="built_in">lower_bound</span>(myvector.<span class="built_in">begin</span>(), myvector.<span class="built_in">end</span>(),<span class="number">3</span>,<span class="built_in">mycomp2</span>());</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*iter = &quot;</span> &lt;&lt; *iter;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="upper-bound"><a href="#upper-bound" class="headerlink" title="upper_bound()"></a><em>upper_bound()</em></h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//查找[first, last)区域中第一个大于 val 的元素。</span></span><br><span class="line"><span class="comment">ForwardIterator upper_bound (ForwardIterator first, ForwardIterator last,</span></span><br><span class="line"><span class="comment">                             const T&amp; val);</span></span><br><span class="line"><span class="comment">//查找[first, last)区域中第一个不符合 comp 规则的元素</span></span><br><span class="line"><span class="comment">ForwardIterator upper_bound (ForwardIterator first, ForwardIterator last,</span></span><br><span class="line"><span class="comment">                             const T&amp; val, Compare comp);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>     <span class="comment">// std::cout</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span>    <span class="comment">// std::upper_bound</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span>       <span class="comment">// std::vector</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//以普通函数的方式定义查找规则</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">mycomp</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> </span>&#123; <span class="keyword">return</span> i &gt; j; &#125;</span><br><span class="line"><span class="comment">//以函数对象的形式定义查找规则</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">mycomp2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> <span class="type">int</span>&amp; i, <span class="type">const</span> <span class="type">int</span>&amp; j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i &gt; j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line">    <span class="comment">//从 a 数组中找到第一个大于 3 的元素</span></span><br><span class="line">    <span class="type">int</span> *p = <span class="built_in">upper_bound</span>(a, a + <span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*p = &quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; myvector&#123; <span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">    <span class="comment">//根据 mycomp2 规则，从 myvector 容器中找到第一个违背 mycomp2 规则的元素</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;::iterator iter = <span class="built_in">upper_bound</span>(myvector.<span class="built_in">begin</span>(), myvector.<span class="built_in">end</span>(), <span class="number">3</span>, <span class="built_in">mycomp2</span>());</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*iter = &quot;</span> &lt;&lt; *iter;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="equal-range"><a href="#equal-range" class="headerlink" title="equal_range()"></a><em>equal_range()</em></h2><p><a href="http://c.biancheng.net/view/7531.html">http://c.biancheng.net/view/7531.html</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="binary-search"><a href="#binary-search" class="headerlink" title="binary_search()"></a><em>binary_search()</em></h2><p><a href="http://c.biancheng.net/view/7537.html">http://c.biancheng.net/view/7537.html</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h1 id="增加堆栈空间"><a href="#增加堆栈空间" class="headerlink" title="增加堆栈空间"></a>增加堆栈空间</h1><p>int main() {<br>    int size(512&lt;&lt;20); &#x2F;&#x2F; 512M<br>    <strong>asm</strong> ( “movq %0, %%rsp\n”::”r”((char*)malloc(size)+size)); &#x2F;&#x2F; YOUR CODE</p>
<pre><code>exit(0);
</code></pre>
<p>}</p>
<h2 id="c-引用"><a href="#c-引用" class="headerlink" title="c++引用"></a>c++引用</h2><ol>
<li>引用的本质：</li>
</ol>
<p>引用是一个变量的别名。 可以把它想象成对一个已存在变量的另一个称呼。</p>
<p>引用不是一个独立的变量，它不占用额外的内存空间来存储自身的值。 它是直接指向原始变量的内存地址。</p>
<p>对引用的操作等同于对原始变量的操作。</p>
<ol start="2">
<li>引用的声明和初始化：</li>
</ol>
<p>语法： 类型 &amp;引用名 &#x3D; 变量名;</p>
<p>类型: 引用所引用的变量的类型。</p>
<p>&amp;: 引用声明符。 它是区分引用和普通变量声明的关键。</p>
<p>引用名: 你为引用选择的名称。</p>
<p>变量名: 引用所引用的已存在的变量的名字。</p>
<p>必须初始化： 引用在声明时必须立即初始化，即必须指定它所引用的变量。 这是因为引用一旦创建，就永远绑定到那个变量，不能再改变。 尝试不初始化引用会导致编译错误。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> &amp;refNum = num; <span class="comment">// 正确： refNum 是 num 的引用，并且初始化了</span></span><br><span class="line"><span class="comment">// int &amp;ref;        // 错误： 引用 ref 没有被初始化</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>引用的使用：</li>
</ol>
<p>使用引用就像使用原始变量一样。 你可以读取引用的值，修改引用的值，将引用传递给函数等等。 所有这些操作都会直接影响原始变量。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">int</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> &amp;refNum = num;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; refNum;   <span class="comment">// 输出 10 (读取引用 refNum 的值)</span></span><br><span class="line">refNum = <span class="number">20</span>;     <span class="comment">// 修改引用 refNum 的值（同时修改了 num 的值）</span></span><br><span class="line">cout &lt;&lt; num;      <span class="comment">// 输出 20 (num 的值已经被 refNum 修改)</span></span><br><span class="line">IGNORE_WHEN_COPYING_START</span><br><span class="line">content_copy</span><br><span class="line">download</span><br><span class="line">Use code with caution.</span><br><span class="line">C++</span><br><span class="line">IGNORE_WHEN_COPYING_END</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>引用的特性：</li>
</ol>
<p>不能重新绑定： 引用一旦绑定到一个变量，就不能再绑定到另一个变量。</p>
<p>不存在空引用： 引用必须始终引用一个有效的对象。 不允许有空引用（即引用不指向任何东西）。</p>
<p>不能引用字面常量： 通常情况下，你不能直接引用字面常量（例如数字、字符串）。 如果你想引用字面常量，需要先将字面常量赋值给一个变量，然后引用这个变量。 但是，使用 const 关键字可以引用常量。</p>
<p>&#x2F;&#x2F;int &amp;ref &#x3D; 10; &#x2F;&#x2F;错误<br>const int &amp;ref &#x3D; 10; &#x2F;&#x2F;正确，相当于创建了一个临时变量 const int temp &#x3D; 10; int &amp;ref &#x3D; temp;<br>IGNORE_WHEN_COPYING_START<br>content_copy<br>download<br>Use code with caution.<br>C++<br>IGNORE_WHEN_COPYING_END</p>
<p>引用与指针的区别：</p>
<p>引用必须初始化，指针可以不初始化。</p>
<p>引用不能重新绑定，指针可以重新指向。</p>
<p>引用不存在空引用，指针可以为空指针 (nullptr)。</p>
<p>引用更安全：由于引用必须初始化且不能重新绑定，因此使用引用可以避免一些空指针和野指针的问题。</p>
<p>引用更容易使用：使用引用时不需要像指针那样使用 * 解引用操作符。</p>
<ol start="5">
<li>引用的应用场景：</li>
</ol>
<p>函数参数传递： 通过引用传递参数可以避免复制实参，提高效率，并且允许函数修改实参的值。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">increment</span><span class="params">(<span class="type">int</span> &amp;x)</span> </span>&#123;</span><br><span class="line">    x++; <span class="comment">// 修改了实参的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">increment</span>(num); <span class="comment">// 通过引用传递 num</span></span><br><span class="line">    cout &lt;&lt; num;   <span class="comment">// 输出 6 (num 的值被 increment 函数修改)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">IGNORE_WHEN_COPYING_START</span><br><span class="line">content_copy</span><br><span class="line">download</span><br><span class="line">Use code with caution.</span><br><span class="line">C++</span><br><span class="line">IGNORE_WHEN_COPYING_END</span><br><span class="line"></span><br><span class="line">函数返回值： 函数可以返回引用，允许调用者直接修改函数内部的变量。</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">getElement</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arr[index]; <span class="comment">// 返回数组元素的引用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">getElement</span>(numbers, <span class="number">1</span>) = <span class="number">10</span>; <span class="comment">// 修改了 numbers[1] 的值</span></span><br><span class="line">    cout &lt;&lt; numbers[<span class="number">1</span>];           <span class="comment">// 输出 10</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">IGNORE_WHEN_COPYING_START</span><br><span class="line">content_copy</span><br><span class="line">download</span><br><span class="line">Use code with caution.</span><br><span class="line">C++</span><br><span class="line">IGNORE_WHEN_COPYING_END</span><br></pre></td></tr></table></figure>
<p>运算符重载： 在运算符重载中，可以使用引用来提高效率并允许修改对象的状态。</p>
<p>示例总结：</p>
<p>#include <iostream></p>
<p>int main() {<br>    int x &#x3D; 5;<br>    int &amp;y &#x3D; x; &#x2F;&#x2F; y 是 x 的引用</p>
<pre><code>std::cout &lt;&lt; &quot;x: &quot; &lt;&lt; x &lt;&lt; std::endl;  // 输出：x: 5
std::cout &lt;&lt; &quot;y: &quot; &lt;&lt; y &lt;&lt; std::endl;  // 输出：y: 5

y = 10; // 修改 y 的值

std::cout &lt;&lt; &quot;x: &quot; &lt;&lt; x &lt;&lt; std::endl;  // 输出：x: 10  (x 的值也被修改了，因为 y 是 x 的引用)
std::cout &lt;&lt; &quot;y: &quot; &lt;&lt; y &lt;&lt; std::endl;  // 输出：y: 10

return 0;
</code></pre>
<p>}<br>IGNORE_WHEN_COPYING_START<br>content_copy<br>download<br>Use code with caution.<br>C++<br>IGNORE_WHEN_COPYING_END</p>
<p>希望这个详细的解释能够帮助你理解 C++ 中引用的相关语法和用法。 记住，理解引用就是理解它是原始变量的另一个名字，并且对它的操作会直接影响原始变量。</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>算法类</category>
      </categories>
      <tags>
        <tag>acm</tag>
        <tag>算法</tag>
        <tag>训练记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Summer training daily record 7.19~7.22</title>
    <url>/2023/07/20/blog-1/</url>
    <content><![CDATA[<h1 id="概率与期望"><a href="#概率与期望" class="headerlink" title="概率与期望"></a>概率与期望</h1><p><a href="https://notes.sshwy.name/Math/Expectation/Classic/">https://notes.sshwy.name/Math/Expectation/Classic/</a></p>
<h1 id="哈夫曼树"><a href="#哈夫曼树" class="headerlink" title="哈夫曼树"></a>哈夫曼树</h1><h1 id="费马点"><a href="#费马点" class="headerlink" title="费马点"></a>费马点</h1><h1 id="Dilworth定理-反链定理"><a href="#Dilworth定理-反链定理" class="headerlink" title="Dilworth定理  反链定理"></a>Dilworth定理  反链定理</h1><p><a href="https://blog.csdn.net/shulianghan/article/details/109070679">https://blog.csdn.net/shulianghan/article/details/109070679</a></p>
<h1 id="牛顿迭代法优化-sqrt"><a href="#牛顿迭代法优化-sqrt" class="headerlink" title="牛顿迭代法优化 sqrt"></a>牛顿迭代法优化 sqrt</h1><h1 id="组合数取模的各种方法"><a href="#组合数取模的各种方法" class="headerlink" title="组合数取模的各种方法"></a>组合数取模的各种方法</h1><p><a href="http://acm.hdu.edu.cn/contest/problem?cid=1098&pid=1012">http://acm.hdu.edu.cn/contest/problem?cid=1098&amp;pid=1012</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(3, <span class="string">&quot;Ofast&quot;</span>, <span class="string">&quot;inline&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">100</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> sum[N];</span><br><span class="line">ll jie[N], res[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">jie[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">jie[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">1e6</span>; i++) &#123;</span><br><span class="line">jie[i] = i * jie[i - <span class="number">1</span>], jie[i] %= mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a, ll b, ll m = mod)</span> </span>&#123;</span><br><span class="line">ll s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (b) &#123;</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">1</span>)s = (s * a) % m;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">a = (a * a) % m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s % m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll x,ll m=mod)</span> </span>&#123;</span><br><span class="line">x %= m;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">qpow</span>(x, m - <span class="number">2</span>, m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m == n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> (jie[m] * <span class="built_in">inv</span>(jie[m - n] * jie[n])) % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">sum[i] = <span class="number">0</span>, res[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (m--) &#123;</span><br><span class="line"><span class="type">int</span> u, v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">sum[u]++, sum[v]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= sum[i]; j++) &#123;</span><br><span class="line">res[j] += <span class="built_in">C</span>(j, sum[i]), res[j] %= mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans = res[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">ans ^= res[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; ans &lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="各种树"><a href="#各种树" class="headerlink" title="各种树"></a>各种树</h1><p><a href="https://www.cnblogs.com/maybe2030/p/4732377.html">https://www.cnblogs.com/maybe2030/p/4732377.html</a></p>
<h1 id="卡spfa"><a href="#卡spfa" class="headerlink" title="卡spfa"></a>卡spfa</h1><p><a href="https://www.cnblogs.com/luckyblock/p/14317096.html">https://www.cnblogs.com/luckyblock/p/14317096.html</a></p>
<p>bellmon-ford<br>迭代n次，<br>for n（不超过n条边的路径）<br>for 所有边&#x2F;&#x2F;松弛操作<br>dist[b]&#x3D;min(dist[b],dist[a]+w)</p>
<p>spfa就是队列优化的bellman_ford算法<br>使用spfa判断图中是否存在负环的话，有两种方法</p>
<ol>
<li><p>判断一个点是不是已经进入队列了n次，由bellman_ford算法可以知道，如果不存在负环最多经过n次迭代就可以得到1到任何一个点的最短距离，一个点最多被更新n-1次</p>
</li>
<li><p>判断到当前点的最短路径长度是不是大于等于n了！如果是的话，就说明存在一条路径有n的长度，那么该路径有n+1个点，必有两个点相同，所以一定存在负环<br>需要注意的是判断整个图存不存在负环，并不是判断从1开始存不存在负环，所以一开始要把所有点加入到队列中<br><strong>数组模拟单链表</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2010</span>, M = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> h[N], w[M], e[M], ne[M], idx;</span><br><span class="line"><span class="type">int</span> dist[N], cnt[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        st[i] = <span class="literal">true</span>;</span><br><span class="line">        q.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        st[t] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (dist[j] &gt; dist[t] + w[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j] = dist[t] + w[i];</span><br><span class="line">                cnt[j] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cnt[j] &gt;= n) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (!st[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(j);</span><br><span class="line">                    st[j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b, c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        <span class="built_in">add</span>(a, b, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">spfa</span>()) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>vector存图</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2010</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> dist[N];</span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">VER</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> to;</span><br><span class="line">	<span class="type">int</span> w;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;VER&gt; h[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	VER ver;</span><br><span class="line">	ver.to = b;</span><br><span class="line">	ver.w  = w;</span><br><span class="line">	h[a].<span class="built_in">push_back</span>(ver);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 	memset(dist, 0x3f, sizeof dist);</span></span><br><span class="line"><span class="comment">// 	dist[1] = 0;</span></span><br><span class="line">	</span><br><span class="line">	queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">	<span class="comment">// 所有点都入队 </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		st[i] = <span class="literal">true</span>;</span><br><span class="line">		q.<span class="built_in">push</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">		q.<span class="built_in">pop</span>();</span><br><span class="line">		st[t] = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(cnt[t] &gt;= n) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; h[t].<span class="built_in">size</span>(); i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> j = h[t][i].to, w = h[t][i].w;</span><br><span class="line">			<span class="keyword">if</span>(dist[j] &gt; dist[t] + w)</span><br><span class="line">			&#123;</span><br><span class="line">				dist[j] = dist[t] + w;</span><br><span class="line">				cnt[j] = cnt[t] + <span class="number">1</span>; <span class="comment">// t-&gt;j路径长度+1 </span></span><br><span class="line">				<span class="keyword">if</span>(!st[j]) <span class="comment">// j不在队列中 </span></span><br><span class="line">				&#123;</span><br><span class="line">					q.<span class="built_in">push</span>(j);</span><br><span class="line">					st[j] = <span class="literal">true</span>;</span><br><span class="line">				&#125;	</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;	</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">while</span>(m--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> a, b, w;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;w);</span><br><span class="line">		<span class="built_in">add</span>(a, b, w);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">bool</span> t = <span class="built_in">spfa</span>();</span><br><span class="line">	<span class="keyword">if</span>(t) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>  <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="图和树的概念整理"><a href="#图和树的概念整理" class="headerlink" title="图和树的概念整理"></a>图和树的概念整理</h1><p><a href="https://blog.csdn.net/weixin_45697774/article/details/104495126">https://blog.csdn.net/weixin_45697774/article/details/104495126</a><br><a href="https://blog.csdn.net/weixin_45697774/article/details/105352366">https://blog.csdn.net/weixin_45697774/article/details/105352366</a></p>
<h2 id="链式向前星-存图"><a href="#链式向前星-存图" class="headerlink" title="链式向前星 存图"></a>链式向前星 存图</h2><p> <a href="https://blog.csdn.net/lookqaq/article/details/81304637">https://blog.csdn.net/lookqaq/article/details/81304637</a></p>
<p>向前星：边集数组<br>所有边首先按照起点从小到大第一次序排列，然后按照终点从小到大第二次序排列<br>并记录以i为起点的边的数量(len[i])，和所有符合条件的边的在数组中的起始位置(head[i])<br>主要用于优化spfa,dfs,bfs;<br>因为需要排序操作，使用快排时间至少为O（nlogn）</p>
<p>链式向前星：优化了排序的向前星</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="type">int</span> next;</span><br><span class="line">     <span class="type">int</span> to;</span><br><span class="line">     <span class="type">int</span> w;</span><br><span class="line">&#125;;</span><br><span class="line">其中edge[i].to表示第i条边的终点,edge[i].next表示与第i条边同起点的下一条边的存储位置,edge[i].w为边权值.</span><br><span class="line">另外还有一个数组head[i],存储所有符合起点为i的边的在数组中的起始位置</span><br><span class="line">head[]数组一般初始化为<span class="number">-1</span>,对于加边的add函数是这样的:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v,<span class="type">int</span> w)</span><span class="comment">//起点u，终点v，边权重w</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[cnt].w = w;</span><br><span class="line">    edge[cnt].to = v;</span><br><span class="line">    edge[cnt].next = head[u]<span class="comment">//与第cnt条边同起点(u)的下一条边的存储位置</span></span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>模拟输入输出<br>1 2<br>2 3<br>3 4<br>1 3<br>4 1<br>1 5<br>4 5<br>得到（cnt&#x3D;0）<br>edge[0].to &#x3D; 2;     edge[0].next &#x3D; -1;      head[1] &#x3D; 0;&#x2F;&#x2F;<br>edge[1].to &#x3D; 3;     edge[1].next &#x3D; -1;      head[2] &#x3D; 1;<br>edge[2].to &#x3D; 4;     edge[2],next &#x3D; -1;      head[3] &#x3D; 2;<br>edge[3].to &#x3D; 3;     edge[3].next &#x3D; 0;       head[1] &#x3D; 3;&#x2F;&#x2F;<br>edge[4].to &#x3D; 1;     edge[4].next &#x3D; -1;      head[4] &#x3D; 4;<br>edge[5].to &#x3D; 5;     edge[5].next &#x3D; 3;       head[1] &#x3D; 5;&#x2F;&#x2F;<br>edge[6].to &#x3D; 5;     edge[6].next &#x3D; 4;       head[4] &#x3D; 6;<br>例如起点为1的边，读取head[1]&#x3D;5,从5——&gt;3——&gt;0链式逆序回溯</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    ll v,nex,val,u;</span><br><span class="line">&#125;e[N];</span><br><span class="line"></span><br><span class="line">ll head[N],cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(ll u,ll v,ll val)</span><span class="comment">//从u到v，从父节点到子节点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[++cnt].nex=head[u];</span><br><span class="line">    e[cnt].val=val;<span class="comment">//可有可无</span></span><br><span class="line">    e[cnt].v=v;</span><br><span class="line">    e[cnt].u=u;<span class="comment">//可有可无</span></span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(ll i=head[u];i;i=e[i].nex)</span><br><span class="line">    &#123;</span><br><span class="line">        ll v=e[i].v;</span><br><span class="line">        ---------------</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这样我们就可以遍历全部的点了！！！：）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="二分图-x2F-二部图"><a href="#二分图-x2F-二部图" class="headerlink" title="二分图&#x2F;二部图"></a>二分图&#x2F;二部图</h2><h2 id="01背包朴素优化"><a href="#01背包朴素优化" class="headerlink" title="01背包朴素优化"></a>01背包朴素优化</h2><p>只需要用到上一层或者下一层状态时，在两个状态（0·1）之间轮流转化<br>利用滚动数组 或者代码的等价变形优化</p>
<p><a href="https://www.acwing.com/solution/content/52491/">https://www.acwing.com/solution/content/52491/</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>算法类</category>
      </categories>
      <tags>
        <tag>acm</tag>
        <tag>算法</tag>
        <tag>训练记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/06/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Summer training daily record 7.12~7.18</title>
    <url>/2023/07/12/train_record_7.12/</url>
    <content><![CDATA[<h1 id="图论构造-Tenzing-and-His-Animal-Friends"><a href="#图论构造-Tenzing-and-His-Animal-Friends" class="headerlink" title="图论构造 Tenzing and His Animal Friends"></a>图论构造 Tenzing and His Animal Friends</h1><p><a href="https://codeforces.com/problemset/problem/1842/D">https://codeforces.com/problemset/problem/1842/D</a><br><strong>看不懂的题面部分</strong>：u,v,y的意义。<br>理解为u或者v分开单独玩的时间不超过y。一共m组.</p>
<p>思路总结：<br>求最长时间的情况下，由于n一定不参加聚会，所以和n关联的m最大可以参加v(m-&gt;n)的时间，类推每个点最长参加时长为它到n的最短路。当1,n不相连则无上限（样例如果没有2 5 1 那么2 3可以无限参加派对）。</p>
<p>接着构造聚会的方案。di为1-&gt;i的最短路，仅在di-&gt;dn时间选择i,使得（u,v）满足du-dv&lt;&#x3D;y。即每次选出最短路的点，之后加入</p>
<p>另一个是dijkstra构造，即每次取最短点。设存在两个集合S,T，集合S 中为还能参加聚会的点，集合 T 中为不能再参加聚会的点。最初 T 中仅n 一个元素。联系到上述每个点最大参会总时长的得出方式，我们每次从 S 中选择一个参会时间上限最短的点 x，让S 中的所有点都参加一次聚会，时长为 x 的参会时间上限。一直这样进行下去，直到点 1不在 S 当中。</p>
<h1 id="CF876-div2-C-Insert-Zero-and-Invert-Prefix-偏移量-贪心"><a href="#CF876-div2-C-Insert-Zero-and-Invert-Prefix-偏移量-贪心" class="headerlink" title="CF876(div2)-C-Insert Zero and Invert Prefix(偏移量+贪心)"></a>CF876(div2)-C-Insert Zero and Invert Prefix(偏移量+贪心)</h1><p><a href="https://codeforces.com/problemset/problem/1839/C">https://codeforces.com/problemset/problem/1839/C</a></p>
<p>考察的部分：特殊情况贪心+偏移量<br>具体解答<a href="https://zhuanlan.zhihu.com/p/634514907">https://zhuanlan.zhihu.com/p/634514907</a><br><strong>偏移量cost解释</strong>：当做逆操作时候，数组前面的书均取逆，cost记录奇偶次，并且与原数组的数操作得出数现在的状态</p>
<p>该评论区有提及从左向右扫的逆向思路：形如1111……0的串，删去最后的0并反转所有的1<br>不断重复<br>例如<br>    1 0 0 1 1 0<br>      x<br>    0 0 1 1 0<br>            x<br>    1 1 0 0<br>        x<br>    0 0 0 </p>
<ul>
<li><input disabled="" type="checkbox"> 但是怎么变成代码呢emmmm<br>拆解操作思路<br><a href="https://zhuanlan.zhihu.com/p/636927276">https://zhuanlan.zhihu.com/p/636927276</a></li>
</ul>
<h1 id="CF-884-vp"><a href="#CF-884-vp" class="headerlink" title="CF 884 vp"></a>CF 884 vp</h1><h1 id="acwing-数学部分补充"><a href="#acwing-数学部分补充" class="headerlink" title="acwing 数学部分补充"></a>acwing 数学部分补充</h1><p>卡特兰数<br><a href="https://leetcode.cn/circle/article/lWYCzv/">https://leetcode.cn/circle/article/lWYCzv/</a></p>
<h4 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#%E4%B8%80%E3%80%81%E5%BC%95%E8%A8%80"></a>一、引言</h4><p>卡特兰数（Catalan number）是<strong>组合数学</strong>中一个常出现在各种<strong>计数问题</strong>中的<strong>数列</strong>。</p>
<p>数列的前几项为：<code>1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862，...</code></p>
<p>本文将会选取几个经典的卡特兰问题，难度先易后难，带领读者逐个击破解决，最后给出相关的解题模板。</p>
<h4 id="二、经典问题"><a href="#二、经典问题" class="headerlink" title="二、经典问题"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#%E4%BA%8C%E3%80%81%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98"></a>二、经典问题</h4><h5 id="2-1-进出栈序列"><a href="#2-1-进出栈序列" class="headerlink" title="2.1 进出栈序列"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#21-%E8%BF%9B%E5%87%BA%E6%A0%88%E5%BA%8F%E5%88%97"></a>2.1 进出栈序列</h5><p>这是一道<strong>最经典</strong>的入门级卡特兰数题目，如果能把这题看懂，相信后面的题目也能迎刃而解。</p>
<p><strong>题目描述</strong></p>
<p>n 个元素进栈序列为：<code>1，2，3，4，...，n</code>，则有多少种出栈序列</p>
<p><strong>思路</strong></p>
<p>我们将进栈表示为 +1，出栈表示为 -1，则 1 3 2 的出栈序列可以表示为：<code>+1 -1 +1 +1 -1 -1</code>。</p>
<p><img src="https://pic.leetcode-cn.com/ed47ff3bb463fd4635707d47b2dbec7034141f798fb18b514170f4df39e9dd16-frame_00003.png" alt="frame_00003.png"></p>
<p>根据栈本身的特点，每次出栈的时候，必定之前有元素入栈，即对于每个 -1 前面都有一个 +1 相对应。因此，出栈序列的<strong>所有前缀和</strong>必然大于等于 0，并且 +1 的数量<strong>等于</strong> -1 的数量。</p>
<p>接下来让我们观察一下 n &#x3D; 3 的一种出栈序列：<code>+1 -1 -1 +1 -1 +1</code>。序列前三项和小于 0，显然这是个非法的序列。</p>
<p>如果将<strong>第一个</strong>前缀和小于 0 的前缀，即前三项元素都进行取反，就会得到：<code>-1 +1 +1 +1 -1 +1</code>。此时有 <code>3 + 1</code> 个 +1 以及 <code>3 - 1</code> 个 -1。</p>
<p>因为这个小于 0 的前缀和必然是 -1，且 -1 比 +1 多一个，取反后，-1 比 +1 少一个，则 +1 变为 n + 1 个，且 -1 变为 n - 1 个。进一步推广，对于 n 元素的每种非法出栈序列，都会对应一个含有 <code>n + 1</code> 个 +1 以及 <code>n - 1</code> 个 -1 的序列。</p>
<p>如何证明这两种序列是一一对应的？</p>
<p>假设非法序列为 A，对应的序列为 B。每个 A 只有一个”<strong>第一个前缀和小于 0 的前缀</strong>“，所以每个 A 只能产生一个 B。而每个 B 想要还原到 A，就需要找到”<strong>第一个前缀和大于 0 的前缀</strong>“，显然 B 也只能产生一个 A。</p>
<p><img src="https://pic.leetcode-cn.com/846c04b60f59ab17deffce8e6c217732106f6865fb29d274665b1d956b47b8bd-frame_00011.png" alt="frame_00011.png"></p>
<p>每个 B 都有 <code>n + 1</code> 个 +1 以及 <code>n - 1</code> 个 -1，因此 B 的数量为 C2nn+1C_{2n}^{n+1}，相当于在长度为 2n 的序列中找到 <code>n + 1</code> 个位置存放 +1。相应的，非法序列的数量也就等于 C2nn+1C_{2n}^{n+1}。</p>
<p>出栈序列的总数量共有 C2nnC_{2n}^{n}，因此，合法的出栈序列的数量为 C2nn−C2nn+1=C2nnn+1C_{2n}^{n} - C_{2n}^{n+1} &#x3D; \frac{C_{2n}^n}{n + 1}。</p>
<p>此时我们就得到了卡特兰数的通项 C2nnn+1\frac{C_{2n}^n}{n + 1}，至于具体如何计算结果将会在后面进行介绍。</p>
<h5 id="2-2-括号序列"><a href="#2-2-括号序列" class="headerlink" title="2.2 括号序列"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#22-%E6%8B%AC%E5%8F%B7%E5%BA%8F%E5%88%97"></a>2.2 括号序列</h5><p><strong>题目描述</strong></p>
<p>n 对括号，则有多少种 “括号匹配” 的括号序列</p>
<p><img src="https://pic.leetcode-cn.com/cde681df7861e934f517b6996ceabe7be7b9dbc6310f69ea6166461920272643-frame_00006.png" alt="frame_00006.png"></p>
<p><strong>思路</strong></p>
<p>左括号看成 +1，右括号看成 -1，那么就和上题的进出栈一样，共有 C2nnn+1\frac{C_{2n}^n}{n + 1} 种序列。</p>
<h5 id="2-3-二叉树"><a href="#2-3-二叉树" class="headerlink" title="2.3 二叉树"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#23-%E4%BA%8C%E5%8F%89%E6%A0%91"></a>2.3 二叉树</h5><p><strong>题目描述</strong></p>
<p><code>n + 1</code> 个叶子节点能够构成多少种形状不同的（国际）满二叉树</p>
<p>（国际）满二叉树定义：如果一棵二叉树的结点要么是叶子结点，要么它有两个子结点，这样的树就是满二叉树。</p>
<p><img src="https://pic.leetcode-cn.com/69112f87285d0db7f02e27a3794a92a9191880286f8019912858c4939999272b-frame_00008.png" alt="frame_00008.png"></p>
<p><strong>思路</strong></p>
<p>使用深度优先搜索这个满二叉树，向左扩展时标记为 +1，向右扩展时标记为 -1。</p>
<p>由于每个非叶子节点都有两个左右子节点，所有它必然会先向左扩展，再向右扩展。总体下来，左右扩展将会形成匹配，即变成进出栈的题型。<code>n + 1</code> 个叶子结点会有 2n 次扩展，构成 C2nnn+1\frac{C_{2n}^n}{n + 1} 种形状不同的满二叉树。</p>
<p><img src="https://pic.leetcode-cn.com/2c18d56f21ce18d9c25adb5645aa9557d21fc2bbcdad86e80c894703199761fb-frame_00009.png" alt="frame_00009.png"></p>
<h5 id="2-4-电影购票"><a href="#2-4-电影购票" class="headerlink" title="2.4 电影购票"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#24-%E7%94%B5%E5%BD%B1%E8%B4%AD%E7%A5%A8"></a>2.4 电影购票</h5><p><strong>题目描述</strong></p>
<p>电影票一张 50 coin，且售票厅没有 coin。m 个人各自持有 50 coin，n 个人各自持有 100 coin。</p>
<p>则有多少种排队方式，可以让每个人都买到电影票。</p>
<p><strong>思路</strong></p>
<p>持有 50 coin 的人每次购票时不需要找零，并且可以帮助后面持有 100 coin 的人找零；而对于持有 100 coin 的人每次购票时需要找零，但 100 coin 对后面的找零没有任何作用。</p>
<p>因此，相当于每个持有 100 coin 的人都需要和一个持有 50 coin 的人进行匹配。我们将持有 50 coin 的标记为 +1，持有 100 coin 的标记为 -1，此时又回到了进出栈问题。</p>
<p>不同的是，m 并一定等于 n，且排队序列是一种排列，需要考虑先后顺序，例如各自持有 50 coin 的甲和乙的前后关系会造成两种不同的排队序列。所以，将会有 (Cm+nm−Cm+nm+1)∗m!∗n!(C_{m+n}^{m}-C_{m+n}^{m+1})*m!*n!</p>
<p>第二项为什么是 Cm+nm+1C_{m+n}^{m+1}，其实很简单，我们每次把第一个前缀小于0 的前缀取反后，会造成 +1 多了一个而 -1 少了一个。这里 +1 有 m 个，-1 有 n 个，取反后 +1 变成 <code>m + 1</code> 个，-1 变成 <code>n - 1</code> 个，总和不变。</p>
<h4 id="三、解题模板"><a href="#三、解题模板" class="headerlink" title="三、解题模板"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#%E4%B8%89%E3%80%81%E8%A7%A3%E9%A2%98%E6%A8%A1%E6%9D%BF"></a>三、解题模板</h4><p>最后我们需要来计算一下卡特兰数的通项 Cn=C2nnn+1C_{n} &#x3D; \frac{C_{2n}^n}{n + 1}</p>
<p>卡特兰数满足以下递推式：</p>
<p>C1=1C_{1}&#x3D;1，Cn=Cn−14∗n−2n+1C_{n} &#x3D; C_{n-1}\frac{4*n-2}{n+1}（证明从略）</p>
<p>因此，我们可以通过递推来得到第 n 个卡特兰数。</p>
<p><strong>代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="comment">// 打印前 n 个卡特兰数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">BigInteger</span> <span class="variable">ans</span> <span class="operator">=</span> BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;1:&quot;</span> + ans.toString());</span><br><span class="line"><span class="type">BigInteger</span> <span class="variable">four</span> <span class="operator">=</span> BigInteger.valueOf(<span class="number">4</span>); </span><br><span class="line"><span class="type">BigInteger</span> <span class="variable">one</span> <span class="operator">=</span> BigInteger.valueOf(<span class="number">1</span>);</span><br><span class="line"><span class="type">BigInteger</span> <span class="variable">two</span> <span class="operator">=</span> BigInteger.valueOf(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="type">BigInteger</span> <span class="variable">bi</span> <span class="operator">=</span> BigInteger.valueOf(i);</span><br><span class="line">    ans = ans.multiply(four.multiply(bi).subtract(two)).divide(bi.add(one));</span><br><span class="line">    System.out.println(i + <span class="string">&quot;:&quot;</span> + ans.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打印前 n 个卡特兰数</span></span><br><span class="line">ans, n = <span class="number">1</span>, <span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1:&quot;</span> + <span class="built_in">str</span>(ans))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n + <span class="number">1</span>):</span><br><span class="line">    ans = ans * (<span class="number">4</span> * i - <span class="number">2</span>) // (i + <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(i) + <span class="string">&quot;:&quot;</span> + <span class="built_in">str</span>(ans))</span><br></pre></td></tr></table></figure>

<p>需要注意的是，由于卡特兰数增长速度较快，当 n 等于 17 时，卡特兰数将会超过 int 最大值，造成溢出（Python 除外）。对于 Java 语言来说，可以使用 BigInteger 来计算大整数。</p>
<p>那如果 +1 的数量不等于 -1 的数量呢，如前面提到的电影购票问题。此时 Cn=Cm+nm−Cm+nm+1C_{n}&#x3D;C_{m+n}^{m}-C_{m+n}^{m+1}，不是卡特兰数的通项，也就不能够继续使用原有的递推性质。</p>
<p>那就直接推呗。</p>
<p>Cn=Cm+nm−Cm+nm+1=(m+n)!m!∗n!−(m+n)!(m+1)!∗(n−1)!=(m+n)!m!∗n!−(m+n)!∗1m+1∗nm!∗n!=(m+n)!m!∗n!∗(1−1m+1∗n)=(m+n)!m!∗n!∗m+1−nm+1\begin{aligned}C_{n}&amp;&#x3D;C_{m+n}^{m}-C_{m+n}^{m+1}\\ &amp;&#x3D;\frac{(m+n)!}{m!*n!}-\frac{(m+n)!}{(m+1)!*(n-1)!}\\ &amp;&#x3D;\frac{(m+n)!}{m!*n!}-\frac{(m+n)!*\frac{1}{m+1}*n}{m!*n!}\\ &amp;&#x3D;\frac{(m+n)!}{m!*n!}*(1-\frac{1}{m+1}*n)\\ &amp;&#x3D;\frac{(m+n)!}{m!*n!}*\frac{m+1-n}{m+1}\\ \end{aligned}</p>
<p>一般而言，为了降低难度，题目会要求我们计算排列数量，所以 An=Cn∗m!∗n!=(m+n)!∗m+1−nm+1A_{n}&#x3D;C_{n}*m!*n!&#x3D;(m+n)!*\frac{m+1-n}{m+1}</p>
<h4 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#%E5%9B%9B%E3%80%81%E6%80%BB%E7%BB%93"></a>四、总结</h4><p>基本上所有的卡特兰数问题经过一定的转换都可以还原成进出栈问题。因此，只要我们能够学会进出栈问题的解法，无论问题再怎么变化，本质还是不变的。</p>
<p>卡特兰数问题中都会存在一种匹配关系，如进出栈匹配，括号匹配等，一旦计数问题中存在这种关系，那我们就需要去考虑这是否是卡特兰数问题。此外，我们还可以记住序列前四项：<code>1, 1, 2, 5</code>，这些将有利于我们联想到卡特兰数。</p>
<p>目前，LeetCode 已经出现一道卡特兰数问题 <a href="https://leetcode-cn.com/problems/handshakes-that-dont-cross/">1259. 不相交的握手</a>，这也是这篇文章编写的原因之一。同时，近年某巴巴，某讯的笔试题中也有出现过这类题目，无非将背景换成买烧饼，借书排队等，相信这些都难不倒读者。</p>
<h4 id="五、扩展"><a href="#五、扩展" class="headerlink" title="五、扩展"></a><a href="https://leetcode.cn/circle/article/lWYCzv/#%E4%BA%94%E3%80%81%E6%89%A9%E5%B1%95"></a>五、扩展</h4><p>最后留一道比较有意思的卡特兰数问题，欢迎读者留言，提出自己的看法。</p>
<p>8 个高矮不同的人需要排成两队，每队 4 个人。其中，每排都是从低到高排列，且第二排的第 i 个人比第一排中第 i 个人高，则有多少种排队方式。</p>
<hr>
<p>以 1 2 3 4 5 6 7 8 表示8个人升高，陆续为这8个人排队，排到第一队记为0，排到第二队记为1.<br>观察两个界，即 00001111 和 01010101分别对应排队：<br>观察紧迫界，01 01 01 01 ，拥有特征（1） 任意前缀 0 的个树大于1的个数，特征（2）每两个作为一对，有左0右1的特征。具备卡特兰数特征。1可以和后面的0交换位置，1不可以和前面的0交换位置。解即卡特兰数</p>
<h1 id="01背包一维优化倒序更新问题"><a href="#01背包一维优化倒序更新问题" class="headerlink" title="01背包一维优化倒序更新问题"></a>01背包一维优化倒序更新问题</h1><p>一维01背包为什么倒序：</p>
<p>我们每次计算dp[j] (即dp[i][j]) 的时候都会需要dp[j-w[i]] (即dp[i-1][j-w[i]])的值。因为j-w[i]比j小，所以如果我们正序计算，那么dp[j-w[i]]就已经更新了 (即dp[i][j-w[i]])，与状态转移方程不符。</p>
<p>如果重量是负数，怎么处理？：</p>
<p>如果重量是负数，那么上述状态转移方程中j-w[i]就会比j大，为避免先更新dp[j-w[i]]我们只能正序更新数组。<br>example:[<a href="http://poj.org/problem?id=2184%5D">http://poj.org/problem?id=2184]</a><br>题意：给你n头奶牛，每头奶牛都有一个智商和情商，在选出的x头奶牛智商和与情商和都大于等于0的情况下求智商总和与情商总和的最大值。</p>
<p>思路：以智商或者情商为价值，另一个为重量，就是典型的01背包问题，首先重量为正数时就是正常的01背包，但重量为负数时由于下标不能为负，我们需要增加数组长度。也就是把坐标0向正方向移动：-100000…0…100000 –&gt; 0…100000…200000。dp[100000]设为0，最后扫一遍正数区间[100000, 200001]更新一个最大值即可。<br>N, H &#x3D; 200000, 100000<br>dp &#x3D; [-float(“inf”)] * (N+1)<br>dp[H] &#x3D; 0<br>w &#x3D; [-5, 8, 6, 2, -8]<br>v &#x3D; [7, -6, -3, 1, -5]<br>n &#x3D; 5</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">for i in range(n):</span><br><span class="line">    if w[i] &gt; 0://把第二层循环遍历展开分类讨论</span><br><span class="line">        for j in range(N, w[i]-1, -1):</span><br><span class="line">            dp[j] = max(dp[j], dp[j-w[i]] + v[i])</span><br><span class="line">    else:</span><br><span class="line">        for j in range(0, N+w[i]+1):</span><br><span class="line">            dp[j] = max(dp[j], dp[j-w[i]] + v[i])</span><br><span class="line"></span><br><span class="line">res = 0</span><br><span class="line">for j in range(H, N+1)://在正情况中遍历最大</span><br><span class="line">    if dp[j] &gt;= 0:</span><br><span class="line">        res = max(res, dp[j]+j-H)//情商+智商和-前移的1000</span><br><span class="line">print(res)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>算法类</category>
      </categories>
      <tags>
        <tag>acm</tag>
        <tag>算法</tag>
        <tag>训练记录</tag>
      </tags>
  </entry>
  <entry>
    <title>cs144笔记（一）</title>
    <url>/2024/09/20/cs144_notes/</url>
    <content><![CDATA[<ol>
<li>标题 [数个 “#” + 空格 前置]</li>
<li>强调 [用 “**” 或 “__” 包围]</li>
<li>斜体 [用 “*” 或 “_” 包围]</li>
<li>删除线 [用 “~~” 包围]</li>
<li>代码 [用 “&#96;” 包围]</li>
<li>代码块 [按三个 “&#96;” 并敲回车]</li>
<li>引用 [“&gt;” + 空格 前置]</li>
<li>无序列表 [“-“ 或 “+” + 空格 前置]</li>
<li>有序列表 [数字 + “.” + 空格 前置]</li>
<li>链接 [常用 “[ ]” + “( )” 分别包围文本与链接]   <a href="https://github.com/Sakiyary">来看看我贫瘠的仓库罢</a></li>
<li>任务列表 [“- [ ]” + 空格 前置]</li>
<li>表格 [用 “|” 绘制表格边框]</li>
<li>割线 [按三个 “*” 或 “-“ 或 “_” 并敲回车]</li>
<li>Emoji表情 [“:” 前置]<br>[TOC]</li>
</ol>
<h1 id="1-1-app传输流程"><a href="#1-1-app传输流程" class="headerlink" title="1.1 app传输流程"></a>1.1 app传输流程</h1><p>略</p>
<h1 id="1-2四层网络模型"><a href="#1-2四层网络模型" class="headerlink" title="1.2四层网络模型"></a>1.2四层网络模型</h1><p>| application |-&gt;application presentation<br>| transport |-&gt;session transport<br>| network |-&gt;network<br>| link |-&gt;link physical</p>
<p><strong>ip:</strong><br>internet protocal<br>尽可能传输数据，但是传输可能无序倒甚至损坏<br><strong>tcp：</strong><br>transmission control protocol<br>尽可能正确传输，复用保证正确传输<br><strong>udp：</strong><br>比tcp简单，不完全保证送达</p>
<p><img src="/image.png" alt="alt text"></p>
<p><strong>ip the thin waist</strong><br><img src="/%7BBFA69572-8AF8-4625-8885-7207550B724C%7D.png" alt="alt text"></p>
<h1 id="1-3ip服务模型"><a href="#1-3ip服务模型" class="headerlink" title="1.3ip服务模型"></a>1.3ip服务模型</h1><p><img src="/%7BC160080B-2EB0-4693-8DF6-4ED550C87D1C%7D.png" alt="alt text"></p>
<h2 id="the-ip-service-model"><a href="#the-ip-service-model" class="headerlink" title="the ip service model"></a><strong>the ip service model</strong></h2><p><img src="/%7B613DED09-6128-4E38-8A8A-359A73B7095B%7D.png" alt="alt text"></p>
<h4 id="data"><a href="#data" class="headerlink" title="data"></a>data</h4><p>自包含的包 一步步跳转<br>ipsa:来源地  ipda:目标地<img src="/%7B468D1283-01FC-4E6F-9E8D-D60AAAF0FBD6%7D.png" alt="alt text"></p>
<h4 id="unreliable"><a href="#unreliable" class="headerlink" title="unreliable"></a>unreliable</h4><p>数据可能丢失</p>
<h4 id="best-effort"><a href="#best-effort" class="headerlink" title="best effort"></a>best effort</h4><p>尽可能不丢，只err后丢</p>
<h4 id="connectionless"><a href="#connectionless" class="headerlink" title="connectionless"></a>connectionless</h4><p>不连接 不传输任何状态</p>
<h2 id="为什么ip服务尽可能简单"><a href="#为什么ip服务尽可能简单" class="headerlink" title="为什么ip服务尽可能简单"></a>为什么ip服务尽可能简单</h2><ol>
<li>更可靠 更容易更新 开销更低 更快</li>
<li>端到端原则 </li>
<li>可信不可信的服务都可以建设到ip服务上</li>
<li>ip对链路层做了最少的假设</li>
</ol>
<h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><ol>
<li>试图防止数据包自循环  在每个数据段头部+跳数(hopcount)字段 ttl字段</li>
<li>ip分片过长数据包 适应不同能力的链路</li>
<li>使用头部校验减少数据传错目的地 </li>
<li>IPv4 ipv6</li>
<li>可以在header加新功能</li>
</ol>
<h2 id="ipv4头部"><a href="#ipv4头部" class="headerlink" title="ipv4头部"></a>ipv4头部</h2><p><img src="/%7B0D74048E-8EF9-4FA6-A632-3B688096163F%7D.png" alt="alt text"></p>
<p><img src="/%7BEA34E3A9-A028-4BB0-BD78-23D06202B10C%7D.png" alt="alt text"></p>
<h1 id="1-4-数据包生命周期"><a href="#1-4-数据包生命周期" class="headerlink" title="1.4 数据包生命周期"></a>1.4 数据包生命周期</h1><p><strong>tcp btye stream</strong><br>三次握手</p>
<ol>
<li>客户端像服务器发送一个同步消息syn</li>
<li>服务器响应一个同步消息确认客户端请求 syn ack</li>
<li>客户端通过确认服务器的同步请求相应 ack<br><img src="/%7B9CA46152-1D4F-4391-A698-96F11A67655B%7D.png" alt="alt text"></li>
</ol>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>技术</category>
        <category>基础类</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>序章</title>
    <url>/2023/09/22/%E5%BA%8F%E7%AB%A0/</url>
    <content><![CDATA[<p>序——车站茶馆女孩的故事<br>你睡过头了。<br>一手摁住因为加速度不够将要随奔跑的风飞走的帽子，大衣后襟拍击着你的塑料手提箱。蒸汽火车古董似厚重的锈铁门，擦着你的发梢合上了门页，合上了咋咋乎乎的车厢。<br>震耳欲聋的声音使你想起前几天拜访过的雪山。灰黑的火山灰雪崩式地吞并了原本皑皑无垢的千年雪原。<br>你庆幸你从那场劫难中逃生，你庆幸这辆古董火车并没有出现脱轨的意外，你庆幸你及时下了车。<br>但是你一抬头你就怀疑你是不是一时迷糊下错了站。<br>头顶是悠悠荡荡的波光粼粼，显然不是天空拥有的光影。是一个湖底的车站。但是你并没有因为无法呼吸而心跳急促。你才发现有一层很薄很薄的玻璃承受着水底的压强。<br>然后，眼前是一个茶馆，散步在花丛、花环、花堆中。没错，它就是这个车站本身。<br>“很奇怪对吧。这个茶馆。”<br>突然有人和你随意地搭话了一句。<br>你十分赞同她的想法，毫不犹豫地点点头。<br>“我好像总是能到很奇怪的地方呢。”<br>“那不是很美妙吗，抛弃没有意思的日常，遇见奇幻的旅行——童话般。”<br>这位自来熟搭话的白发女孩指了指我的帽子。<br>“嘛，果然很容易看得出来。不错，我是位旅行者。但是这些奇幻可没有那么美好。想知道天天吃硬饼干的感觉吗？”你回了一个苦笑，拍了一下帽沿，掉下一些灰尘。<br>“不过，来到这个地方确实是美妙的旅行。”毕竟脱出常识却依然魅力十足的东西，已经不多了。这里是不是那个车站已经不重要了。你想。<br>“既然这样，我有一个建议，旅行者。既然难得来到如此美丽的茶馆，何不坐下来享受一杯。”<br>“不错。”<br>她轻车熟路地带你坐到了一个好位置。然后递给你了一份菜单，自己也拿起一份装模作样地看起来了，但是看了一会就满脸无趣的丢掉了。<br>“你是附近的常客吗？”<br>“没错。”<br>“这些食物原来不是特别好吗，看你没有什么欲望的样子？”<br>“没有的事！我只是觉得它们名字很没意思。茶和小食点心本身还是很棒的。我推荐你看看隐藏菜单！”<br>你上上下下翻了好几遍菜单，并没有看见不寻常的东西。<br>“并没有啊……”<br>“啊，这，不会吧……你等等我去叫老板娘问问。”<br>她刚要站起挪开椅子，若有所思，半途又放弃地坐下了。<br>“还是你去吧。”<br>“额，嗯，好的。”<br>你觉得还是把握机会，要到隐藏菜单比较好，可能真的有惊喜。<br>不过迎面有一个拿着菜单的金发女孩冲到你的桌子旁边。<br>“这位客人对不起，刚才厨房出了点小问题。您现在需要点餐吗？”<br>“嗯。麻烦问一下这家店有隐藏菜单吗？”<br>她楞了一下，然后绽放了一个灿烂的笑容。<br>“当然有哦！今天是茶和咖啡混搭的系列！您需要哪两种混搭我们都可以为您做出菜品！”<br>“好，谢谢。那我要卡布奇诺和伯爵红茶。给另一位小姐点餐吧。”<br>她飞快地结束书写后，转向我桌对面的小姐，然后脸色唰地铁青了。<br>“鳩……”缓慢有力地挤出了一个词，大概是白发小姐的名字。<br>“啊哈哈——你好啊店长桑。”<br>“鳩你又把自己当做顾客了吗？”<br>“我也有在干活啊，你看看我拉了一个客人呢，客人！”<br>“我现在更需要作为服务生的你。”<br>你饶有兴致地观察她们对话。<br>金发的老板娘用那张可爱的脸怒气冲冲地盯着鳩小姐的神色，应该不会很恐怖。<br>过了一小会，鳩小姐“好吧好吧”地举着自己的双手双脚表示投降，然后并没有灰溜溜地跑回自己的工作岗位。<br>“这次又怎么了？”<br>“しろっぷ你不知道吗，保持微笑很累的！所以让我再休息一会！”鳩小姐神气不减。<br>“脸累了？……有了！”被叫做しろっぷ(糖浆)的老板娘顿悟地鼓掌，然后拉了一张椅子坐在鳩小姐旁边。<br>“鳩，脸伸过来一下。”<br>“？”<br>老板娘的手捏着鳩小姐毫无防备的脸蛋两端，像揉面团拉来扯去。鳩小姐的脸也像面团一样Q弹地改变着自己的形状。<br>“丽咋挂森嘛？！！？(你在干什么)”<br>“帮助你放松面部肌肉～我奶奶教我的～～”<br>老板娘似乎力气很大的样子，鳩小姐无力抵抗，只好瘫在椅子上听之任之了。<br>又过了一会后。<br>“这位顾客实在对不起耽误了您的时间！”老板娘派结束受刑(？)的鳩小姐派送菜单后，向你鞠躬道歉。<br>你连忙站起来摆摆手让她不要那么客气。<br>“没事我也挺享受的，这种无风不浪的日子。”<br>“是啊。”老板娘感同身受地点了点头后，可算起身了。<br>“但是小店还是要赔偿顾客的损失，这次就免费了。”<br>“真的吗？作为旅行者我可不会客气。”<br>老板娘满面自豪地插插腰。<br>“当然！小店的目标可是全员好评。”<br>“大多数好评就够了。快乐才是第一的。”<br>“也是呢。”她挠了挠头，然后重新绽放笑容，蹦蹦跳跳地原路返回了。<br>接着鳩小姐就端着盘子送来了茶品，或者说是咖啡。<br>你回过头，笑着和她调侃了一句。<br>“很忙啊，也很有活力。”<br>“是啊是啊。”她努力地把自己的死鱼眼挤成微笑和我的笑容应和。<br>“即使是这样日常的生活，工作对你来说还是很快乐的，是吗。”<br>“是的。”她立马给出了个肯定的答案，然后半恼半喜地跟上了老板娘的脚步。<br>你嘬了一小口热茶，或者热咖啡。清苦与醇苦碰撞在一起，滑而不腻的微甜缓和着苦的粗糙。毋庸置疑，是杯好茶，或者说好咖啡。<br>“真暖和啊。”<br>你望着桌边向光芒的太阳花，又嘬了一口茶。<br>＊<br>再次回过头，你要登上的下一班的列车大门正徐徐敞开。这班火车花了大半个下午去等候，你却也不紧不慢，焦躁的线缕被对意外之喜的留恋占据了，就好像自己跋涉那么多年绕个圈回到了家乡，但执拗自己还未抵达的目的地，动摇中再次选择了远离。<br>那么就用眷恋着的眼，收下一场饱满的告别。但是来不及了，年轻的老板娘和服务员四处奔走，为自己的小店攒攒当地的口碑。多想挥着帽，和无忧无虑地努力的二人说声再会！<br>可惜你一直是一个优柔寡断的人，想不好究竟该为这家店留下什么祝福，却已经在车厢内越来越远的眺望着她们和她们的目前的所有。羞赧地确认车厢空空如也，冲着列车的反方向脱帽鞠躬，然后重新戴好陪伴已久的帽子。<br>但是头上并没有被覆盖的实感。一摸，帽子没了。好像是刚好一摸的瞬间，悄然消失的。<br>帽子并不贵重，可是自己无比珍视它。顾不上一地的灰，像老鼠一样伏在座位低下团团转，夕阳西下，光线朦胧而昏暗，你混乱中想起自己的行囊里好像有件可以随时产生光源的小玩意，干脆把东西倒的一地都是，拎出那个玩意。<br>没有任何开关按钮机关，就是一小块分杈扭曲的合金木条，越暗的地方，周围产生的光雾越亮，反之也成立。你刚刚想再次伏地，却发现被投进的夕光沐浴的木条如警报般高亮闪烁，凝聚的光雾一声怒吼。从来没有见过这种现象，尤其是狞笑的光。胆小的你吓的四处顾盼，连连却步，不小心撞到了一个人。你条件反射般低头鞠躬。<br>“啊啊，只是撞了一下，没事的，倒是你急匆匆地是在找什么东西吗？”<br>是个女声，全身被一批破旧的蓑衣厚实地掩盖住，脸戴一个拟兽的面具，炽橙的色泽同平淡的眼眸相称，睨视着稍矮的自己，然后就看不出其他特征了。你在说明情况之前，找到了自己的所失之物。破旧的旅行帽子，就在那女性的腰后方别着。<br>你不顾一片狼藉，耐心地和这位未知的女性讲述方才的诡异。自然，那位女性还是不怎么相信的样子。<br>“这样，你回答我三个问题吧。”<br>“可是……”你明知道这个人有一种强势占有物品的姿态，却说不出点道理反驳她。<br>“别缩起来，我不是要为难你。只要你好好答出来了，不管答案如何，我都会还给你的，毕竟理论上你才是它的主人。”<br>不对劲的地方被你卡在喉咙，咽回腹中。要拿回你的宝贝帽子。<br>女性游走了一圈后，找了个还算清爽的位置坐下，单抱着臂面对目光游离的你。<br>“刚才你上站的地方，很喜欢是吧，哪里很喜欢呢？”<br>危机的本能驱动你力争沉着的反问了一句。“……为什么”<br>她沉吟一会。窗户之间细细的影子缝侧身钻出一匹马……还是马车？这马只有飘逸的鬃毛展示着它的生命，它的脑袋像是在艺术建筑里被活生生割下来的铜马头，却比玻璃晶莹透亮；前双腿绑着直三角形装的粗笨骨骼支撑片；陶黏土揉成的躯体滴答着液珠，结结实实的绑着一辆只有两个柄两个半轮的平板木战车；一个前仰后翻的娃娃像是被一刀两断，上半身沾死在木板上，伤痕累累。它呲开牙缝，但从背部的小人发出鬼魂哭泣的声音，阴火的泪潮湿了木板战车。<br>“不用管它，你继续回答吧”<br>“……”<br>小人像没看到你们两，专心致志地叫喊疼痛。<br>“因为作为流转枢纽的她终于又重新开始汇聚了——汇聚，散发，传播，汇聚！啊啊啊，美妙而伟大的因果的职称马上就会获赐奇迹，从日常琐事中得到自由行踪的解脱！！！还有还有她还不知道她干了什么伟业，一脸可爱认真的犯大蠢，乐死我了！”<br>小人的哭喊戛然而止，随后身形隐去。<br>可是你心里想的是【两个女孩子一起努力创造了一个无忧的童话餐厅】之类天真可爱的理由。你根本不知道你嘴巴说出来的是什么事情，又是从哪里知道的。<br>女性观察了你的微小反应，十分满意地点了点头，指示你靠近并把帽子扣在你的头上，但手依旧斜扯着帽子的一角，生怕它被你带跑。<br>“你然后你是旅行者吧？我看你这破帽子大概坚持旅行了很久了。如果是，告诉我你是因为什么才坚持到现在的？”<br>“……我只能回答你前一个问题，是。”<br>“前一个问题不是问题，只是小小地做个礼貌性的确认。”<br>“……”<br>“算了，就当你回答过了，但是，请你扪心自问一下，这种理由真的有种种存在过吗？胆小，冒失，图安逸的你，何来有勇气当旅行者，接触八方游士？有人支持你吗？除了返还故乡，你还有其他更加向往到要以死所求的地方？那个地方真的存在还是神话传说？你真的挂念那么多吗？真的有那么好的运气一切顺利？你连基本的旅行者的无情都没有，你真的适合当旅行者吗？是不是感觉活到现在真的是万事大吉？我要提醒你以上都不是我的问题，而是你·的·问·题。”<br>一粒灰尘飘入你的眼睑，如果它不会膨胀不会变成一只七面块状头颅的肌肉白虎不会用外露的两趾抓手挤压你的太阳穴，你不会注意到它的。<br>“咕唔额啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊……”<br>“最后，这个帽子你是哪来的？”<br>你绝对绝对不能张嘴，你绝对绝对不能回答，意识会混乱，你马上要是我的了！<br>“机械的机构打上鸡血的浮士德的管，闯入的天空其实无关紧要地哀伤环境，合金欢喜是日子向着子子子子宇宙戴浮点矩阵打转，等一下你片片就是我的香醇浓郁，黜退，黜退，哎呀呀，飞了改变的不对称体爆炸——————————”<br>你最后听到：<br>“只有绑定了人的旅行者之帽才是目标啊，不过一包的因果道具真的是以外之喜，估计是帽子的功劳吧。”<br>＊<br>可算是把我给回收了，这个废物竟然想把我带离她的身边！！</p>
]]></content>
      <categories>
        <category>创作</category>
        <category>文字</category>
      </categories>
      <tags>
        <tag>待填坑</tag>
        <tag>原创</tag>
        <tag>红茶馆</tag>
      </tags>
  </entry>
  <entry>
    <title>第零章</title>
    <url>/2023/09/22/%E7%AC%AC%E9%9B%B6%E7%AB%A0/</url>
    <content><![CDATA[<p>因为是车站的附属茶馆，所以我们接待的客人常常是处于路途中的行人。于是比起照顾住在车站附近的老顾客的个人口味，我们会提供更加纷杂多变的菜品和茶品来满足形形色色的行人多多样样的需求。当然，我们的菜单永远会保留基本好评的热门菜品，但它们不会成为我们餐厅的招牌标签。我开店之初原本是那么想的，才思酌出用创意菜品取胜的经营策略。<br>不过我忽略了，即使是急匆匆的行人，只要不是漫游的旅行者，也可能会成为我们的常客。前几日，有一位面容清秀的绸衣小老太送给了我们一本她自己精心编写的小册子，据说里面记载着她对车站附近餐饮店的美食考察。<br>那时我款款收下了，并赠送一顿免费餐作为回礼。因为我没有了解同行兴趣，所以我打算直接跳过有关其他店的内容。不过翻开第一页，记载便是我们亲爱的茶馆。期间十几页，按时间轴排布，完整地记录着开店以来的数十个特色菜单。她大段论述后，最后记载着对我们的总评：“富有奇幻幽丽的用餐氛围，新品层出不穷且多数美味，红茶馆的两大特色完全突破了我对车站餐厅杂乱劣质的刻板印象。不过也因此容易让新客人不知道这家店是干什么的，茶馆的新面孔的增加量一直很少，挺可惜的。其他也就私心希望小糖浆能在开店两周年时回归一些经典菜品。”<br>我只看见了三个字——两周年。我脑中的红茶馆的时间似乎一直茫然地停滞不前，以至于我不曾去惦记它的生日，乃至经历。不过红茶馆有着让大家都友好相处的使命，我还是想好好去庆祝它的。<br>于是到了今天的的睡前时间，我打扰了一下鳩的房间，并把这本东西拿给她看。身着条纹长袍睡衣的鳩特意从床上起来，端端正正地坐在她的实木书桌前，仔细研读了半小时。我也坐在她的床沿，盯着她挺直的背影发呆了半小时。<br>[糖浆，这本书提到的建议很有用哦]<br>鳩利落地掏出纸笔，写写画画了点什么后，似乎确认了什么重要的东西。她带着那张纸，坐到了我身侧，向我总结道。<br>[……建议？什么建议？]<br>[这本书里的啊，顾客不是在里面写了很多总结分享吗？我看了看，写的真的很用心，看起来店长有很多很好心的熟客呢]<br>[虽然我不是很记得她……]<br>[嗯？上次你免单的那位风衣旅人再度访问时，你不是一眼认出了他，还兴致勃勃地和我这次说一定要好好什么的，我还以为你是热爱顾客的那种店长。虽然我两次的表现都很棒并没有需要特别改正的——]<br>[主要是因为那个人的帽子莫名熟悉亲切，很好认…]<br>[说不定是糖浆老家传统款式的帽子]<br>[尽管如此，我还是感觉有点对不起特地制书送我的这位好妇人……]<br>[人家也不晓得你不惦记她，话虽这么说但是对顾客尤其诚心实意的店长也会自个儿过意不去，所以——]<br>鳩拍拍了书的胶皮封面，书发出一阵啪啪的响声。<br>[没关系，我们只要真诚地回应她的建议，就是身为老客的她最大的满足——虽然看样子你没有把建议读进去呢]<br>[我不擅长读书啦——]<br>[也是……不对啊糖浆你还是给我学着读书啊！]<br>一对比我两阅读的收获，我对老客心意的态度显得尤其粗糙。下次确实要改进……！<br>[嗯——下次一定]<br>[哪个下次？比如说两周年之后？]<br>[可以！]<br>[可是两周年具体来说是什么时候？我来当糖浆的员工只有半年不到，不是很清楚店史]<br>[emmm，其实我也不知道……？哦对了，我给你看这本书就是想告诉你我们还有两周年的活动这回事。]<br>[关于两周年的活动，糖浆你已经有什么想法要和我说说了？]<br>[不，正相反，我是因为事出突然完全没有想法才来找鳩商讨一下的]<br>[嘛，平时雷厉风行的糖浆只有这(没有目标)时候才不像个店长。虽然这事情好——麻烦，但是鳩帮忙找找灵感还是无妨的——我要抓住每一个店长难得依赖我的机会！]<br>[鳩已经有想法了？！]<br>[准确来说是这位客人有很多想法，我觉得我们只要照着她的意见一项一项完成就会是一个绝佳的庆典]<br>客人的意见……红茶馆是客人的茶馆，她一定比我更明白现在茶馆需要什么吧。<br>[嗯，就这样办吧，没准能弥补一周年庆典的遗憾！]<br>[一周年的遗憾，是什么？]鳩敏锐地抓住了字眼，眼神略带炯炯地追问。只要存在问题，她都能刨根问底地好奇到底。<br>[遗憾当然就是没有一周年庆典！]<br>[啊我就知道～]<br>诶诶诶诶她怎么已经看出来了？我用力地盯着鳩快要抑制不住的笑，缓缓凑近，不过被她招架弹开了。鳩突然弯腰埋头，哧哧地嗔笑起来。<br>[像糖浆这种对自己店的经营如此得心应手的店长，突然匆忙地来向我咨询周年庆这样重要的事，只可能是因为打开始就没在意过]<br>也是呢。<br>我呆然地倒在床上，轱辘轱辘地打转，把鳩刚刚铺好的整洁床单弄的皱巴巴。听到布料摩擦声音的鳩及时地抬头。她喊着[我的被褥——！！]愤怒地扑杀而来，我及时地翻滚到床的另一头，顺手拿回书桌上的书，像地面挣扎的鱼蹦跶蹦跶地溜走了。<br>*<br>我们店要求在五点时就要做开店准备了，不过我今天特别早起了一下，四点钟便蹑手蹑脚的路过隔壁鳩的房间，遛出茶馆去老地方提前做了一些庆典材料的准备。所以鳩醒来时，看到的就已经是一个稍有不同的(伪)庆典.ver茶馆。作为最初的点缀，我在各个花坛的角角落落简单装扮了些亮晶晶的彩球和星星饰品；给为了方便赏天空而敞亮的透明天花板加了一点不会碍眼的小旗子，喷有闪亮菌落的小旗子上画有茶馆经典菜品的蜡笔涂鸦；以及最重要的、为了让大家知道茶馆是干什么的而特别设置的小公告板！<br>原本总是睡迷糊的鳩今天东张西望地来上班了。她东指指，西点点，问[糖浆，这些东西……]<br>[是我勤劳的劳动成果！怎么样怎么样，我整整干了一小时！]<br>鳩继续四处走动着，观察着我的布置嘟嘟囔囔。最后停在了一块由原木片制成的公告板前。她一字一顿地读出上面的内容：<br>“红茶馆是红茶馆，大家放心！！！”<br>鳩沉吟了一会，然后开口<br>[这个是……干什么的？]<br>[哦这个啊，当然是告诉大家红茶馆是干什么的，这样客人就可以安心用餐了～那本书不是有一条意见是“不知道这家店是干什么的”吗？]<br>[糖浆你这没有起一点点安心的作用，反而把红茶馆搞得更可疑了……不过我不想多管闲事了，所以我们就这样做吧]<br>[对吧～]<br>看起来我的工作成果算是得到了通过——没有白忙活了，不过要干的事还有很多<br>[所以鳩你快去上班干活吧，事情还忙得很——不是你怎么扒着公告板睡着了！]<br>[因为店长太可靠了我可以颐养天年了……啊其实就是没新奇的东西就没有动力了……]<br>[不可以的啊鳩要扣你生活费了，快为大家的和谐共处而努力服务啊！？]<br>鳩真的是一有机会就会偷懒……我于是使用“强制力·脸保健操”的招式搓回了鳩清醒的理智，强制性让她站在店门口迎接早上第一班火车的到来，此时是五点十几，而第一班火车是五点半。我赶忙提着放在附近桌上大包小包的材料，回厨房做早餐的外卖。本地的好几位熟客定制了每日常规营养早餐，我得赶紧配制好饮品打包才是。而且今天还有特殊材料的带货要打包，好忙啊好忙啊。<br>我刚急匆匆的回到吧台后的下沉式厨房，熟客的其中之一便提前于我到访了。悄悄来到门背后的她，用其中一只湿哒哒黏糊糊的手——即触手，在我摸到门把手前帮我开了门，并接住了因为抓空失去平衡的我和散落空中的大包小包——用了更多的触手。<br>[看起来今天来太早了]<br>触手的主人说着放下了我和材料们(<em>我才不是材料！</em>)，便收回了多余的触手，不过整个身躯仍挡住了厨房门。她眼带淡薄斜瞟了眼满袋子的材料和我，然后目不转睛玩弄着手上——人型的手——装满乳穗色粘稠液体的锥型透明瓶。<br>携有触手的这位常客名为邱泛路，据说本体是只因对药剂制作的狂热而机缘巧合成精的章鱼。个子比守崖人姐姐还修长的她，今天很难得的披散着她整齐淡银直发，而没有为了搞药剂随意地扎成刺刺的发团。意识到这点蹊跷，我又简单打量了一下她。她今天甚至衣装整洁——简单朴实的一件衬衫搭配无袖外套，也没有穿着斑斑点点的破烂工作吊带裤、也没有神志不清的黑眼圈。甚至她今天面色水灵灵的，白如海水的散光，可以说是罕见的容光焕发。<br>是不是出了什么好事呢？我搓揉搓揉着地的屁股，大惊小怪地复读了她的话<br>[是啊，看来今天来太早了！比我们开店的人都还早呢]<br>我一半是真心觉得她的早的稀奇。从她所隐居的醍醐森林深处，以一般速度步行至我们茶馆需要不短的时间。若是沿水路游泳过来的可能会稍快些，不过她今天显然没有沾过水。不过主要原因还是邱泛路是早餐外卖的长期预定者，自取外卖就是她的反常。<br>[想知道为什么吗？]<br>[想——]<br>得到了想要的回答，她终于敞开了整个门，侧身让出了进厨房的通道。虽然泛路是顾客，但那神气的姿态颇有主人迎客的模样。我乖乖地配合进门。邱泛路跟着我的身子快快的关上了门，拣了个结实的箱子先坐下了。我也不浪费时间，一边处理最后一份早餐外卖，一边等她开口。<br>将昨日预先在陶瓦罐熬好的煎茶汤同刚刚采摘的异色赭红果肉一同装入长条玻璃器皿，交给从东芝村买来小电器均匀摇制，最后用高而细的激水冲一杯清茶，把它们分层混在一杯。接着是熬制的杂野肉。这玩意顶费劲了，当初确认要求时，邱泛路不容回绝地说一定要用当日从活蹦乱跳的野动物上削下的肉来熬，说是她助手在当流浪者时养出的刁钻口味。虽然没明说，但是邱泛路上个月突然订购早餐外卖，大概都是给她助手吃的。<br>烂肉的纹理错杂在混汤里，心又生了几丝好奇，但太多余了。打包。<br>早餐全完成了，但是手边还多了一个为处理的特殊材料。它也是邱泛路要的。<br>[对了，邱泛路你那荧光体素材怎么办？]<br>一时没有回应。直到我打包完了她的那份早餐，她依旧缄默不言，一心一意地摇着手中的瓶子，余兴未尽<br>正当我纠结该如何开口将邱泛路从自我沉浸中拉回神来时，一声哐当的木板撞击声冲入，接着吱吱压地远去。鳩从厨房门口小心翼翼地探出身子，盯着邱泛路旁若无人地占据着厨房中心的位置，不解地瞪圆了眼。<br>由于外卖服务基本上是由我包办的，所以鳩不认识邱泛路，再加上她怕生，似乎怯弱间无所适从，也就忘记本来的来意了。<br>[鳩——你醒了啊，是找我有什么事吗？]<br>鳩原本可能还处于昏昏欲睡的状态，但这会她可困不起来。她大半身严严实实地藏在门框后。<br>[这个人……]<br>[啊，她是我们的常客，放着她不管就好了]<br>[这样啊……额，humm……]鳩凝神呆住了一会。大抵是在搜索自己的记忆记录吧<br>[因为是早餐外卖的常客，所以鳩你不太认识]<br>[什么嘛，原来是这样。我还有以为我变笨了]<br>[少记一个客人怎么会变笨啊<del>]<br>[至少糖浆能记得住很多客人]<br>[原来你那么崇拜我的记忆能力吗？]<br>鳩将几乎要掐在一块的食指拇指伸出，不太服气地再三强调:[大概有一点点，不过就一点点点]<br>[嗯，好，那鳩你来找我有什么事吗？]<br>我试图用扯皮的话舒缓紧绷的鳩，但话题是时候该拉回来了，姑且还是认认真真的营业时间</del><br>[啊……哦，对哦……原来是这样啊。]鳩领会到什么般自言自语，便招手示意我靠近她一点，大概还是觉得晾着常客阔声高谈不太礼貌吧，鳩在一些奇怪的地方总有些不必要的自觉。<br>[客人应该没关系吧……]<br>鳩瞟了一眼，确定邱泛路还是我行我素地乐呵着，才凑近和我说悄悄话。<br>[总之就是我想确认一下二周年活动这件事。虽然糖浆你早上大致布置了一下店面，但是计划啊宣传啊什么的还是一点都没和我说明过，我都不知道想搞什么名堂。我怕今天你就要整点需要我配合的好活之类的，所以还是决定向你问清楚一下……]<br>[事实上鳩还不知道二周年是什么时候吧？]<br>[是的，昨天晚上……]突然鳩颤抖的声线怒意蹿升，一小会后情绪有惊无险地降回冷静水平。[算了，先说正事，呼唔……别告诉我你错过了一周年后还想随缘办二周年。但是仔细想想即使只是那么干还是会有一大批热情的客人附和糖浆的，熟客们真是要把糖浆宠坏了。]<br>[嗯…………嗯？有吗？]<br>[当然，信不信你随手写几张“车站红茶馆二周年方案招募”大字报当传单乱发都能一呼百应。]<br>[鳩啊，就算我再随便也不会糟蹋自己的店哦？]<br>[怎么说的我跟个怂恿人的坏小孩一样？算了不重要，反正店长的安排无论是什么我都能好好配合。那么，具体来说是什么时候办二周年？]<br>[年底……没准？]<br>[既然店长没有准确的意见，那么作为时间主管我强行定在十二月十日]<br>[日期有那么重要吗？]<br>[自然，没有准确而适合的日期规定下来，顾客们就不方便安排，极大可能导致二周年庆典的失败。糖浆除了当店长和厨子以外，什么都不太懂，也不太学的进去……不过相反的，周年庆方案可以安心的全权交给店长了]<br>[这就是二周年分工？]<br>[虽然不擅长学但是领悟能力很好啊，店长]<br>[那么就是我有、意、不、去、学。这很难，你不得不承认。]<br>一股嶙峋的不满，促动狭闷苦恼的我愤懑地脱口斥驳。可说完后却不知道自己在说什么，也不理解我为什么会这么想。简直以为积攒许久杀意的犬狼，终于因忍无可忍地撑开牙锢，却只是为了缓解痒痒的冲动而龇牙咧嘴，虚张声势。<br>好像是老毛病又发作了，怕吓着了鳩，心虚自己蛮不讲理，忐忑不安。<br>[确实，不读书或学习的日子对我来说可是难以想象的煎熬。对我来说，尤其在这种和平却处处不安稳的世界里，学习是最好的适应手段哦。]<br>老实说，乱发脾气的我，根本不在于自己胡言乱语说的在不在理。但鳩以严肃的肯定对应，反留给我了发热的头脑缓冲的余地，无疑的贴心。<br>[嘛，我一时兴起调戏店长过头了。不用太在意刚才的话，毕竟糖浆的任务始终是当好店长]<br>是啊，这些戾气从来不是重点，更不应此影响茶馆的经营者。我摇头抱歉地笑了笑，鳩也会心一笑。<br>我清了清嗓子，作出店长的指令：[早班车还有十五分钟就抵达,鳩差不多该去等候客人们了!]<br>[是的，店长!虽然方案全权交给店长，但是糖浆如果有需要配合的事，还是可以尽管拜托我的。别忘了考虑老妇人的建议——]<br>[当然不会忘！]<br>于是，方才谨言厉色的鳩换上哈欠出门回岗了。一会她定还有十五分钟的小憩。<br>邱泛路窃窃私语的窸窣声渐渐大了些，好像有了点开金口的意思了，我侧耳倾听<br>[有可能吧，如果是用这样一剂猛烈的催化药……]<br>[标记物正在通过——！]<br>结果前言不搭后语，单纯是邱泛路在自言自语罢了。<br>[你啦，人已经到这了，还需要我送外卖吗？]<br>瞧见她旁若无人的样子似乎不愿回答，我放弃地扯了扯她浅蓝长褂的衣角，轻轻咕哝了几句，大意是让她不要偷偷乱碰东西，我去去就回。<br>和邱泛路聊天很艰难，她总是宛若自言自语、随心所欲地对话。无论氛围如何，她可能随时随刻滔滔不绝，也可能随时随刻沉默不语，说白了就是她一点都不懂得接话。这很可能是隐居所致的一个坏习惯。我就当她听见了我的叮嘱，赶忙送货去了。<br>突然回忆起被鳩打断的询问。手握紧荧光体素材，我为难地收脚回身，但是一只突然显现的触手硬生生地别开了我的方向，坚定地推着我向门。<br>意思是还是要送连材料和外卖一起送吗？我回望的眼神如此询问，邱泛路微微颔首，淡淡地和我对视一眼，继续赏玩她沐浴在晨曦散射下的玻璃药剂瓶。<br>唔……她还要研究这个？她不要吃早饭的吗？<br>看来(伪)庆典.ver的茶馆头一天就迎来了特别的客人，虽然蛮有纪念意义的，但是我猜想无论红茶馆是不是庆典中，我们每天第一位的客人也会是特别的，因为他们都比较惊世骇俗。<br>而往日的茶馆每日头号顾客已经就坐于带状粉紫蝴蝶鱼的花丛中，享受清早开胃养生的暖酵麦茶。身边堆着从身上卸下来大大小小的附属装备，草芥粗布的衰衣猎装打扮但整洁靓丽的守崖人姐姐对我粲然一笑，问候了早安。<br>我也不由自主盈盈地笑了，守崖人姐姐的早安问候，自红茶馆开业起就时常见到。我们的熟识不仅仅因为她是常客，更是因为她主动担起了我们红茶馆的安保职责。那笑颜一如既往地令人安宁又令人安心，仿佛是她的到来拉起了红茶馆一日营业的帷幕。<br>[姐姐给，这是今天份的早餐，注意安全哦！]<br>我拿出了一份包装在便携金属餐盒的早餐，搁在了守崖人姐姐的桌上。<br>[好的，谢谢糖浆]<br>餐盒顺手塞入她身上某个大而密封的口袋，同时慢慢悠悠喝茶的她将剩下的茶一饮而尽，迅速背上那堆装备，检查自己上路的准备——守崖人姐姐日常职责就是守护车站附近区域的秩序，忙碌的她只能在赶路地时候扒完自己的早餐。<br>她余光瞄见我手上仍拎着其他外卖[糖浆今天刚刚要去送外卖？]<br>[是哦，因为今天早上做了一些更必要的事情，所以今天送得迟了些。不过其他人并没有姐姐那么着急，幸好先碰到姐姐了]<br>[你不是可以让鳩转交给我嘛]<br>[可是鳩早上很容易犯困，我放心不下来～]<br>[啊哈，她好像是会这样，不过也同样也不会偷吃外卖，很令人安定]<br>[是只要吃到就行了的好搞定的顾客]<br>[我也不只是顾客]<br>[还是安保员！]<br>守崖人姐姐非常认可地顿了顿[毕竟是个守护大家的好工作呢，酬劳也很值]她伸入挂在她侧腰的小零食袋，掏出一根红茶馆零嘴店出品的多重压缩后的肉干一气塞在嘴里。<br>我们在车站入口台阶处分别，约莫一小会后我回到茶馆前。站门敞开，我拾级而上，瞧见悠闲衣着的站长同车站卫生总负责的溶风小姐滔滔不绝地交谈着什么。溶风小姐的兔耳遮挡了二人的面部表情，猜不出讨论的是不是严肃的事。<br>根据车站大门口计时鱼缸内小鱼的清醒率来看，第一班还有九分钟达。<br>鱼缸边有用作留言本的笔。<br>我突发兴致，挥手扯下一页纸，写了“红茶馆二周年”。补了一个12.10的日期和一通装腔做调的合作宣告，潦草的像一个因为玩太疯了而无滋无味的顽童。一扬，纸钻入风流飘走了。我心满意足地走入店门。<br>店门口旁边果然站着一只睡着的鳩，我真的是爱莫能助——别和我提议用茶或者咖啡等富含咖啡因的流体灌醒鳩，从来没有起效过。<br>即使身无疲劳，一大早长途跋涉的辛苦也易使人疲惫。回到厨房就忍不住屁股黏在地板上的纸板，自我安慰就小憩三分钟。<br>宁静，致心绪飘向远方的景致。一座风尘仆仆的关口小城若在眼前，围着同崖石勾心斗角的虫鸣草皮。分明是闻所未闻的地方，它们的面貌却历历在目。我以前的记忆无意复刻各色景观，甚至在脑内自由搭配创造。所谓行万里路就是有这种看似没有用的好处。<br>但手头难以不差分毫地打量时间。早客们即将匆匆碌碌而来，急缺一日最初的能量。我不敢怠慢，心里点数了30下，就等候在另一个离鳩稍远的下车点。<br>盯着大门口的鱼群渐渐彻底苏醒，溅起水波声。鳩不知道什么时候停止了呼噜，清醒了，怀揣着点菜本遥望水底隧道的泛着潜蓝的昏灰尽头。厨房里玻璃器皿碰撞的声音骤止。大门口车站长和溶风小姐背向而行，安定在各自的岗位上。<br>一声悠扬而逐渐犀利的尖啸突然诞生在隧道尽头。但声音逐渐过分洪亮，轰鸣声数倍放大尖啸声中刺耳的杂音噪音。鳩难受地扣住双耳，其余身体强作风轻云淡地保持服务员体态。<br>看来今天来的是辆惨不忍睹的破车。<br>[可是，半毁的老式蒸汽笛都发不出这么惊人的声音。有猫腻。]极近处突然出现说话声。<br>[诶？守崖人姐姐？！]<br>猛回头，苦恼但板着脸的守崖人姐姐已经架全副武装，扣死硬皮的护甲护腕，抽出一对套在指尖与手背的钝器，随意地伸展身体。<br>她本预定要进行早上的每日治安巡逻，但现在她在这里停下了她的巡逻并严阵以待，多半是要准备应付麻烦事。<br>也就是今天大概有大麻烦找上我们茶馆了。<br>[是要发生什么了吗！！]<br>[别急小糖浆，要不了三分钟你就会明白]<br>[等明白了就来不及了啊——！！！无论如何，鳩你先去把厨房里的那位请出来！]<br>鳩楞楞地回头，又假装充耳不闻地端正接客的姿态。<br>[鳩！！]我急匆匆地冲到她身边抓住她的肩膀，[你听见了吧？]<br>[好好好，但是吧，诶……这不太好吧，我还要等候客人啊……]<br>[这种时候不用那么敬业，人命关天，快去——！]<br>我生生地掰开鳩的脚底，推着她慢吞吞前进，鳩畏惧不前地钉在地板上，又犹犹豫豫地向前迈几步，一边嚷嚷着[糖浆自己去不是更快吗……]<br>[等等你说的对，我马上去！]<br>[那边的两位不要那么急嘛，在下又不是神佛，不请自己也会出来的～]<br>结果我才撒腿，半路冒出了个邱泛路，她的触手正好拌在我的后脚。我差点摔了个狗啃泥。<br>还没等我起来抗议，触手就一把将我扶起，然后同时将我与鳩推到她的身后，以触手之笼掩护着我。但见邱泛路的微撑的眼瞳不加掩饰地高歌着分秒的流逝，若呼唤身为不速之客的同胞般。<br>略去刺耳的警示铃和轨道冲击预告，车站长反复强调守崖人姐姐不要开战。守崖人姐姐只是沉稳地在震动的地面上维持架势，不理不睬。<br>灌入铁轨，被淹没，滴答的水流。撑开洞口，被迸裂，巨型的白影。<br>对着白影，守崖人姐姐收起刀，赤手空拳地冲锋了。反应不及的邱泛路还是紧接着跟了上去。新的交锋随着两人身影消失产生了。一连串空气炸响的声音引出了不同程度的沉闷声。<br>鳩不解地询问[那位客人会战斗吗？]<br>[是在说触角的那位吧，虽然会做很多药，但是实战的话……还是她的家养小助手丢的药瓶子会比较准。]<br>鳩呆呆地比划着指头，默然地嘟哝，茶馆真出事了的话，周年庆就开不了咯。<br>［怎么会出事呢，有守崖人姐姐在呢。她守护当地的英雄事迹总不用我再唠叨了吧？］<br>［也是呢，我们就在这等着捷报吧，再不济，糖浆也一定能抗着红茶馆成功逃跑］<br>［别给我太大的压力啊！］<br>鳩舒缓地微笑，扶着摇摇晃晃的桌椅摇摇晃晃地站了起来了。我以搀扶为借口，情不自禁地绕过她的肩膀。<br>剩下和我们待在一起，只有无动于衷地做着卫生工作的溶风小姐。她默默地环视了一圈，问我道，[喂，店长，这些桌椅是摆回原样还是堆到一角，或者你另有安排？]<br>［好敬业啊溶风小姐，还是等一会再说吧，指不定会发生什么事情把你打扫好的卫生糟蹋了］<br>［哼——］溶风小姐背过身子，轻蔑地审视我［所以呢？妨碍我对被强行租借出去的地盘行使支配权吗？根本不。我需要的不是你的关心，而是你的配合。］车站长提过，这块地本身是溶风小姐家的地盘。现在被上头强行征用了。不过我们谁都不知道车站长的上头还有什么。<br>［这样啊……那就麻烦你摆回原样吧］<br>溶风小姐首先把鳩倚靠着的桌子强行拔起，要不是我扶在一旁她一定会吃一个狗啃泥。鳩从我怀里溜出去，闹气地在溶风小姐的背上锤了几下。在顶部观测站的车站长用喇叭不耐烦的喊着，出事了别乱闹，他抽不出来安顿我们。<br>我顿时回想起守崖人姐姐的话。<br>【要不了三分钟你就会明白】<br>已经明白了，其实什么特别的事都不会刻意让我明白。也明白了，其实在场的大家远远比我更在乎红茶馆。更明白了，真正上不关心红茶馆的，只有我。红茶馆是个我一手打造的地方罢了，只是聚集了些人员罢了。我只想看到大家聚集起来，这很简单，根本不需要红茶馆本身。<br>[……]<br>我回头张望。先是一开始的打斗声乍然沉闷，然后是另一团又另一团的稠雾四处窜散，像是白色的黑洞压制了一切的声音和光。只有其中的晶体颗粒折射着波动着的气息。无比潮湿的。<br>结果自己还是一无所知，店长的责任与担当就被如此漠视。莫名的愤懑涌上心头。眼见着诡谲的白色黑洞四处炸开，溶风小姐有模有样地指示着鳩和我退至吧台下方。鳩惴惴不安地示意避难路线，那通往车站地下的楼层。我连忙点头同意。溶风小姐则熟门熟路地掀开厨房地板的冷藏口，爬下我秘密设置的梯子前往下层的仓库。鳩犹豫地来回看着我两，我不轻不重地把她往洞口挤，她才爬下了楼梯。<br>[糖浆！]<br>鳩突然大声叫了我的名字。我才反应过来我在洞口边发呆了几分钟。鳩的手一直高高举起，预备接住殿后的我。<br>［鳩，你和溶风小姐在下面待一会！！］我蹲下冲着洞口喊了完这句，拉上盖子把她们和我的话语一同锁在了下方，随后步履轻盈而坚定地奔向车站的入口。谁都可以，但只有我不能不知道我的茶馆正在经历什么。<br>毫不夸张的说，外面的天空正倾盆倒下着歪七扭八瀑布，我从未见过雨能下得如此压抑而无序。但外界的一切是如此风平浪静，没有太阳的身影但明晃晃，成片的云泛着惨白的乳液不动声色地凝滞在原地。<br>雨伞……还是不带了。尽可能躲避雨点，奔向车站靠山峦的一侧，沿着外置云梯爬上了车站的主控室，却没看到人，只有围了一大圈的机器有规律地闪着灯。我抓住主控室另一侧的重门，拉不动。我就退回云梯，从斜侧方跃上了车站的顶部平台。<br>正前方的瘦高男子正是车站长，奇怪的是他周围的雨点消失了。更准确的来说，雨点一旦过于贴近车站长，就会突然瘫软滴落，就好像被一面隐形的墙夺走了速度。<br>算了，管他呢。<br>我也走到了前头，和车站长并排扶着栏杆。我见他没反应，朝着他视线的方向眺望。是那团白色黑洞，但凝聚成了一定的形体，像是一团毛茸茸的生物。它的头部还塞在湖底隧道的洞口，但大部分肥大的身躯已经退出来了，估计是受到了守崖人姐姐猛烈攻势的惊吓，它的四只肥脚还在扒拉着泥土，努力地想要拉出头部。<br>车站长的眼神突然犀利，默不作声地把我头摁到了围墙以下，紧接着一声沉闷的“砰”，好比起开了一个巨大的木塞子，我甚至能感受到整个车站瘪下去了。待一切安稳后，他翻出栏杆，沿着倾斜的车站顶跌跌撞撞地跑下去。他在末端一跃，一头撞入被药水喷的花花绿绿的云雾中，主动的投入白色黑洞的吸引力中。没过一会，白色黑洞的体形一截一截地收缩了，凝聚小小的一团掷落地面。从迷雾现身的车站长嘴里咬着一块蓝色的晶石，背上还背着一个染得花花绿绿的邱泛路。守崖人从暗处走来——也被染得花花绿绿——从快要瘫倒的车站长背过快要呕吐的邱泛路。她顺带抓着缩小版的白色黑洞脖颈，右手横抱着一个东西。缓过来的车站长调整了步伐，小跑跟上了在前方缓步走向红茶馆的守崖人姐姐。趁他们还没注意到偷偷溜出来的我，我率先溜回厨房摆出一桌早茶，拉上鳩和溶风小姐假装在位置上喝着茶等待他们归来。<br>他们沿着铁轨走来。前头的守崖人姐姐活力满满地提着手上的白色黑洞，远远的同我们打招呼。车站长反倒已经不太行的样子，一路强挺着腰板铁着脸蹒跚前进。守崖人把左手的白色黑洞重重的丢下，同我寻了几根绳子，蹲着把她右手横抱着的东西五花大绑起来。鳩好奇地凑上去，偷偷的掀开覆盖的那层布，欢喜洋溢地回来和我报告，[糖浆，是骷髅诶！！]<br>[骷髅……]我有些毛骨悚然，不太懂哪里值得她这么兴奋。<br>[不用怕，他是活着的。他的种族就是骷髅，只是现在尚处于假死状态。]听到我们的悄悄话，守崖人姐姐安抚道。<br>[啊。还有一件事，小糖浆，下次我战斗的时候呢你还是尽量躲到安全的地方比较好。不过今天我没有提前提醒，我也有责任。小糖浆下次记得就行啦]<br>虽然没做什么坏事，我却感到一阵恶寒穿刺我的瞳仁，瞒不过。从来没瞒过她过。<br>[虽然有点事情想问他们两，不过看样子一时半会也醒不来把，小糖浆麻烦先把他们两关关好，随便挑间锁门的房间就行了，我中午再过来问话。然后呢，麻烦车站长去主控台调整通知一下列车运营安排，我去打扫一下卫生。剩下的人准备三十分钟后迎接客人吧，一大早上就遭遇了那么多麻烦事，辛苦了~各位]<br>房间的要求很简单，是个有吃有床的地方就行，那楼下的仓库就刚好能用。守崖人姐姐先把骷髅竖着搬下去，我则抓小的一团紧随其后。近看才发觉，那小化的白色黑洞竟然是一只云朵做的小狗。<br>守崖人姐姐显然有些走神，放下骷髅后，她回身迎面撞到光明正大跟上她的我，[等等，小糖浆你怎么下来了？]<br>[那个，我想下来检查一下仓库的门锁，顺带把这只小家伙带下来了，省的姐姐跑两趟]<br>[哈……]她有些懊恼的敲了一下自己，[都怪我没说清楚。小糖浆，我说的他们指的是这个骷髅和那个药剂师顾客。至于小狗，它现在是没有危险的，丢它去外边玩耍就好……对了，你们能替我暂时收留这只小白狗吗？]<br>[啊，我当然可以留下它！……等等，药剂师顾客？你是指邱泛路……？她怎么了？？]<br>[具体我也不知道 ，等她醒来问问就知道了。我再上去一趟，小糖浆可以开始确认仓库的密闭性了]<br>姐姐再次爬上楼，木梯受不住重量，吱呀吱呀地呻吟。我闷头扣住了仓库的第三把锁，叠起没用的空箱，腾出更多的空间给另一个人摆放临时的床铺。<br>*<br>更多的详情，我并不知道。当天除了每班列车都准时地延误了半个小时，其余的一切归于平常。我进进出出着厨房的门，偶尔骚弄小白狗的下巴安抚它连连的呜咽；鳩来来回回地奔走，时不时装模作样地坐在衣装尘朴的老猎兵对面，争论今年秋季森林内哪里会有最多的新生幼崽。<br>夜晚的收班跟着被延误的列车时间也延误了半小时。我关灯合上厨房的门闸时，几道光——夹杂低沉的阐述——幽幽地从漆黑一片的红茶馆木地板缝中探出。<br>守崖人姐姐好像今天没其他要事，全权揽走了审讯之类的活。这也确实结结实实地耗费了她一整个日夜。如果是守崖人姐姐的话，肯定什么都知道，却只是缄口不言地进进出出关押人的仓库，独自来回踱步烦恼着什么。只要她不愿主动说，就几乎没办法撬开她的嘴。<br>至于车站长，他和守崖人姐姐对了几个眼神后，就像自觉地收到了什么不可违背的指令，假装整件事完全没发生过。鳩很执着地旁敲侧击地套话了一小时，车站长坚持用一连串相似的打哈哈打发她走了。鳩埋怨道“即使是糊弄，好歹也要有点诚意吧！”<br>总算平凡结束了今天的营业。我照例在门缝后探头，对鳩说了声晚安。一直赌气的鳩不出意外地一个箭步冲上来，双手包裹了我放在门把上的那只手。又是那好奇心害死猫一般的执着眼神，执拗地盯着我，但内心的渴望却不敢化作言语直接地倾诉于我。<br>我替她说：[想要去打探点什么是吧？]<br>鳩反倒被直球吓得支支吾吾起来：[虽然话不能……那么说，对吧？不过我想想……嗯，呃呃呃，总结起来确实……是这个意思吧？……大差不差]<br>我反握她的手，将我们的手推到她的嘴前，[很担心茶馆吗？]<br>[当然会啊！都有怪东西直接莽撞地冲过来了诶。]<br>[万一是不该知道的事情呢？]<br>[你凭什么说事关我留存之地的危机是我不该知道的事情？]<br>[倒也不是这个意思吧，只是守崖人姐姐她看起来不打算和我们说的样子]<br>[在我来之前一直都是这样子的吗，总感觉很多事情虽然不是她全权负责，但是类似比较大的局势啊什么的，你们都是听她的吧？]<br>[但她确实像个万能的守护神。我们并不是听之任之，只是长期的信任而已。鳩到访的时间相对与这里的历史确实太过短暂，不清楚也是正常的嘛。去吧，今天的糖浆累迷糊了，忘记和鳩说晚安了就去睡觉了呢。]鳩有些欲言又止。我拍拍她的肩膀，假装打着大大的哈欠走回了自己的房间，只听房门吱呀晃动的声响。</p>
]]></content>
      <categories>
        <category>创作</category>
        <category>文字</category>
      </categories>
      <tags>
        <tag>待填坑</tag>
        <tag>原创</tag>
        <tag>红茶馆</tag>
      </tags>
  </entry>
  <entry>
    <title>间章（1） 吸猫</title>
    <url>/2023/09/22/%E9%97%B4%E7%AB%A01/</url>
    <content><![CDATA[<p>今天来了位客人，是一个爱猫人士。她希望自己生活的角角落落都充满了猫，包括……<br>“咱要一份猫的饮品！”<br>她冲着我叫嚷一个我闻所未闻的名字。猫的饮品，专门为猫制作的饮品，还是只有猫能喝的饮品？<br>虽然我的学识可以称作相当渊博，但是我和老板娘共事的时间也不长，所以我听不懂老顾客们千篇一律的“老样子”，我也听不懂新顾客千奇百怪的要求。<br>算了，随我理解好了。<br>“好的，一份带猫拉花的拿铁……”<br>“不，不是那种即使一动不动也非常非常特别可爱地每时每刻都可以扼杀我溢出的萌灵魂的简直不应该存在这个世界上美好的究图案！我要，会动的，猫饮品！”<br>什么嘛不是很喜欢猫猫拉花的吗。<br>会动的猫？还是饮品？叫糖浆给猫刷上一层拿铁皮毛给客人喝吗？不可能，不可能。<br>我不解地歪了歪头，我行我素地继续写下“一份带猫拉花的拿铁……”<br>“不 · 是 · 这 · 个！你要是把这份点单上交我就给一个差评！”<br>差评意味客人不满意，你应该好好听客人的投诉或者建议。糖浆在开一对一的新手服务员培训课时对我叮嘱过。<br>所以我停下了笔。<br>但是我不觉得我哪里让她不满意了，我的脑袋歪成了九十度，直视客人的眼睛表示真诚。<br>“你要闹店？”<br>“不，也不是……”<br>客人突然收回了汹汹的气焰，双手摆膝上做得端端正正，乖巧的像知错的小鼠。<br>“我知道我要求的荒唐。我只是真的很想……”<br>她的音量迅速减弱，我完全听不到她后面说了什么。<br>不过我知道突破口在哪里。我小心翼翼地询问。<br>“你最喜欢猫了，对吧？”<br>她突然重振精神，一溜跳上桌子，高高在上的手笔直地戳着我的鼻头。她嘴里中邪似的颤抖地念叨“不，不不，不”<br>不会吧我搞错了？<br>“我明明是世界第一喜欢猫啊！！！”<br>然后她就呐喊了这句话。<br>“好我知道了，客人需要一份猫的饮品，对吧？”<br>我把她撵下桌，塞进了椅子里。<br>——<br>“情况就是这样。你想好对策了吗？”<br>“小菜一碟！稍等，我去拿趟材料～”<br>糖浆转身，一路火花带闪电地跑向某处，然后一路火花带闪电地跑回来，抱着一堆材料。<br>材料很可疑，多数看起来像是木雕石雕专用的工具。<br>“你的对策是，自己刻一个饮品？”<br>“怎么可能我又不是笨蛋！瞧好了！”<br>“嗯嗯——”<br>说着，她流利地泡好了一杯正常的咖啡，放入诡异的冷藏处后，原地等待了几分钟。<br>原地等待了五分钟，原地等待了七分钟。<br>糖浆灿烂地回头问我猫喜欢什么可以泡茶的植物。<br>我如实地回答了后，糖浆又花了几秒钟取回了材料。<br>打包了我提到的植物和冻住的咖啡，派我去送餐。<br>客人对着冻得硬邦邦的铁咖啡杯敲来打去，期待把冻住的咖啡打破后，会蹦出一只拿铁做的猫。<br>然而这是不可能的。<br>再次向我投诉的她听到了否决一切可能的答案后，萎焉耷拉地钻回了座椅，趴在刚才自己在桌面留下的脚印上。怪可怜的。<br>我于是静悄悄地拿起了猫喜欢的植物，丢进了冻住的咖啡中。<br>冻咖啡块咔嚓咔嚓地扭动几下后，一整块跳出杯子扑向飘落的植物叶。<br>落地的，却是一只毛稍发寒的咖啡色猫，和植物叶片扭打在一起。开心地满地咕噜咕噜叫。<br>“这个呢，是特制的猫屎咖啡。你把这个猫当做一般的饮品慢慢喝掉，或者把它当宠物养，都是可以的。”我慢一拍解释道。<br>看着嬉戏的猫的客人的双眼，闪烁着启明星的光芒。她按捺不住地踢开了椅子，也倒在了地上，抓起玩耍的猫抱紧在怀里就是一顿乱撸。<br>“谢谢你们，真的谢谢你们，我已经圆梦了！”<br>“不客气，记得给过好评。”<br>“呜呼呼，呜呼呼，毛茸茸，可爱爱……”<br>没听进去呢。问题不是很大。<br>嗯好吧，这个桌椅的残局就让我来好好收拾一下。</p>
]]></content>
      <categories>
        <category>创作</category>
        <category>文字</category>
      </categories>
      <tags>
        <tag>待填坑</tag>
        <tag>原创</tag>
        <tag>红茶馆</tag>
      </tags>
  </entry>
  <entry>
    <title>喧闹的五十度黑</title>
    <url>/2025/03/16/noise/</url>
    <content><![CDATA[<h1 id="喧闹的五十度黑"><a href="#喧闹的五十度黑" class="headerlink" title="喧闹的五十度黑"></a>喧闹的五十度黑</h1><p>“狐塚医生……？”<br>躲在自己办公桌下过夜，被巡夜的同事发现了。她游移不定地围着我的桌子巡回两圈，似乎以为我是又熟睡了，便悄无声息地离开了。咔哒，咔哒咔哒，连着三声老旧木门转轮声之后，我才手脚并用狼狈地钻出桌底。<br>不过还是太不注意了，毛糙的动作连带已经快拼接好的纸屑乱成一团，头结结实实地磕了一地板。痛得要命，但是沿着瓷砖旋转收缩的震荡声更为炫目，耳朵边持续不断地爬满“嘀——”的尖锐警示声，就像有人把一台上世纪80年代的电视硬塞进我的耳蜗，恶趣味地在同样没有信号的各路电台中来回切换。<br>愈加多的杂音偷摸着黏上我的思绪。<br>“多亏你还知道穿那么厚的衣物来隐藏伤疤吗？现在，全脱了……听见了吗？马上！”<br>刺啦，布料撕扯的声音。<br>“病原菌，你就该生活在垃圾堆里。”<br>哗啦，垃圾袋碰撞的声音。<br>“你的怪叫好恶心。给老娘闭嘴！”<br>啪！干脆的巴掌声。<br>“没有我的允许你绝对不准和家长或者老师说哪怕一个字眼！”<br>以及，歇斯底里的气息声。</p>
<p>“狐塚医生……”<br>我把后辈欲要记载什么的笔给抽走了，“我没事的。相信我。”同时拿回了原本属于我的病案撰写板。“我可是主医，我能不知道自己哪里出了问题吗？”<br>后辈急匆匆地追上离开的我似乎还要追问什么，瞅见我不容置噱的眼神，胆怯地回到自己的工作岗位上。<br>“那狐塚医生不要太勉强自己，即使别的我帮不到什么。但是您教我的经验，我已经掌握了，所以……”<br>“哈，你怎么还赶我走啊？”<br>她连忙摆摆手：“我不是这个意思啦！我只是觉得我已经……”<br>“是啊，你已经能做我也做不到的事情了，主医的位置看起来是要让给你了。我们和学生讲话的，越年轻，才越容易沟通嘛！”我丢大这一串再度堵住后辈的嘴，假装着沉稳的离开了房间，却飞也似得逃回租借的公寓。是的，我是知道自己肯定出了问题。只要身体在稍微歇息，意识便能极为熟练地抽离身外，直到再度有明确的记忆时却发觉自己身处他处，干着一件不在安排内但也无伤大雅的小活。<br>但是无论是对外还是对内，我都不敢承认。总感觉一旦承认了、或者说察觉到了某种存在后，我就很难继续像现在这样维持正常的生活。<br>简单地把床铺和地板上的杂物安置整洁后，我再度掏出一袋装有纸屑的文件夹。这是失去意识的我唯一留下的线索。虽然好久没写正经的笔记，但是这毫无疑问是我的自己，以及它的纸张样式，和我高中时半途而废的日记本一模一样。<br>那天巡夜的同事离开后，我彻夜难眠。冰冷的瓷砖地板和杂乱的事物间本就不该用来睡觉的，但是不知怎么平地摔倒地后，我的身子宛如遇见了世界上最安心的被褥，死死地面着地板躺着，任凭我如何竭尽全力也难以挪动我的身躯。<br>最讨厌的还不是在极度清醒的状态下被鬼压床，而是那时的我无比平静地考虑原地过夜的可能并当机立断地决定，即使是后半夜恢复了活动能力，我却从未考虑回到真正的床铺续眠。而是喜滋滋地抱着纸屑堆，抑制不住窃喜着什么。直到灼热的光照射于我，解离的状态才像见光的鬼似的一瞬间灰飞烟灭。<br>“好吧，我的字真算不上好看……”对比着曾经的日记本的字迹，企图给这细碎的纸片拼图找点灵感，可惜我不争气，没把字写好一点，也没对纸屑手下留情。<br>其实想了想，我为什么得维持现在的生活呢，扪心自问一下，只是对比以前的生活来讲，没有破坏现在的必要性了。已经够好了，没有任何人的牵挂，同样没有任何人的回忆。<br>于是我再度果断的放弃挣扎，一点点地将纸屑像飞雪一样飞洒入垃圾桶，直到厚厚的一层完全遮盖垃圾桶内原本内容物的身影。雪藏。<br>明天就是一年一度的毕业季的开端，该收收心了。</p>
<p>但是我半夜四点多些就被急促的电话声喊醒。钢板的公寓电梯，玻璃的自动门，塑料的门禁外壳，红色的点状闪灯放我一路通行至急诊室，疯狂骚动的心脏尖啸着要休息。那急诊的对象早已比我先乖巧地坐在对面的椅子上，“是狐塚医生吧？”裹着厚衣的她背对我，用着细若游丝的声音问到。<br>“额嗯……是你打的急诊吧。带你来的家长呢，是已经在门外了吧。”赶忙在办公桌上扫视一眼，但是一下子并没有瞅见我的病案撰写板。<br>“没有，家长。不想让他们知道。”<br>“嗯……这样啊。”我故作冷静地在杂乱的抽屉间翻阅。“你是完全不想让家长知道吗，这有点难办啊……”<br>尽管书架遮住了她的脸，单她的声音突然注入了一截自信，“其实还是有办法的吧，医生，只要我能独立自主走完相关流程就行了吧。”<br>“……？”这句话一下子提醒到了我，她的神情和精神状态远比往常急诊的病人健康多了。而且我们这种商业心理诊所的半夜急诊的挂号费，别说学生了，一般家庭的家长不到万不得已也不敢承担。好独立的一个小孩，她会有什么心理问题呢……<br>但是我还是没找到撰写板，该不会什么时候和纸屑一起顺手带回家了，真是伤脑筋，刚从睡眠中苏醒的脑子还是一如既往的不好使。“额……我找不到我的就诊文件了，我去其他办公室借一下？”即使是面对一个表面看起来特别平常的女孩，既然她都来就诊了，我就要尽可能软乎地处理。因为我曾经也一直，一直这样渴望着。<br>“医生，我和你一起吧。要是放着患者一个人待着出事了，医生你不是会很麻烦？”她说着站起来了，主动打开门等我起身。<br>“啊。”确实是这样。我怎么连这种最基本的事都忘记了。医生的职业素养都不如一个病人，我可能有点严重了。“谢谢。那跟我走吧，我们索性换个诊室吧。”<br>普通的诊室虽然不如我工作的那间私密，却更加的宽阔，墙上满满地涂满先前痊愈病人的画作。<br>我随手拿走一本放在同事桌上的撰写板。正要提笔，封面赫然写着我的大名“狐塚”……黑岚？我是悄悄竖了什么仇家吗，哈哈。为了不让患者等太久，我直接倒着翻开页码，正准备问姓名的时候，又发现姓名那一栏又写着一团名字。我分明是认识的，但是那字的线条摇曳跳跃着，在纸面上拔腿跑来跑去。不自觉地揉了两下眼睛，再看字和线条就突然失踪了。呆然地盯着纸面，又猛的将页码拉回开头，“黑”字也趁机藏匿箱中，变成了狐塚■岚。<br>“有病的还另有其人……”<br>“嗯？狐塚医生，患者是我啊。”<br>“哦，没事。我只是想到了一些事情。”我怎么就直接喃喃念出声了……行为越来越失格了啊。我习惯性地单手敲击脑袋的一侧，算是给自己鼓劲了。继续正常的流程吧。<br>启动并登录就诊系统，将今天唯一的病人“拓木 塔”的姓名誊写在纸质病案上后，正式开始今天的就诊。拓木同学今年恰好成年，有自己一定的积蓄，也有完备的身份证明。尽管要紧关头依旧需要监护人的意见，但不耽误悄咪咪的初诊。我答应她我会保密，但是一旦对她病情不利，我便会和她的父母适当沟通。<br>她轻咳了两声，手支着身体一边在椅子上转圈圈，一边夸张又激动地描述自己的情况。撇去口语的浮沫和跳跃的顺序，她的情况大致可以断定为人格解体导致的间歇性五感缺失。<br>接着试探她曾经的经历，她却很快地变脸了。拓木手脚并用地半身爬上桌，突然凑近的黑脸几乎撞翻显示器。<br>行为模式的突变……是破碎感的征兆。下意识地想要后退，但医生的道德逼着我定在原地。<br>“……虽然我同你谈好条件了，但是唯独下面这段内容。你不能和我父母提及任何具体细节，否则！”<br>我的衣领迅速大力扯起，轻易地将个子明显高一截的我拽向突兀发了狠的拓木。仅仅是持续一瞬的窒息感，熊熊烈火般焚烧干枯的理智，头脑昏热的即将爆炸时，转而割裂的强闪折线在我视野的边缘密集地蠕动，强行将我的视野中心像圈养畜生集中赶到被压倒在我身下的拓木塔。那一双寂寥得渗人的眼球，好似曾经镜中的我。<br>身体不怎么痛，心情和思绪歇斯底里地尖叫不要过来不要过来！我还什么都没做，凭什么凭什么凭什么！！！为什么利爪和尖牙只盯着我的我的我的脖子，我受够了绝对不准过来即使我真的很弱很弱但只要能出一口气，只要一次让她恐惧我哪怕一秒———<br>啪！！——响彻房间的一声，我才意识到我的巴掌狠狠地落在本该是患者的脸上，留下一个就诊完绝对不会消失的通红手印。割裂的强闪折线再度闪现又眨眼间消失，被勾引的我茫然地瞧见一侧不知何时架着的手机。那个强闪，原来是闪光灯啊。<br>心理医生失格，被及时地抓拍到了。现在的生活，再也回不来了，甚至可能不如当初。<br>我万劫不复地失去一切气力，衣服浸湿黏答答的冷汗彻底躺在患者的身上。<br>只听见拓木塔欣喜若狂地说着“对，对，就是这样！”把不属于我的身体重新搬回医生的座椅。无法聚焦，看不清她什么表情，但一定得意忘形。<br>“否则这张照片就会被好好的投入互联网哦。”<br>患者简单又应勤地照料了约莫十几分钟，医生才恢复往日的冷静。半吊着眼冷冷地再度打量拓木塔，她倒笑眯眯地摆弄着拍照的手机，无言地警告我。我们就这样默默对峙，直到我重重地叹了一口气，半举双手以表投降。她见状立刻收回笑盈盈的姿态，恢复一开始的乖巧学生的模样：“我准备好了，狐塚医生。”<br>我有模有样的拿起了纸笔。<br>“现在是快要毕业了吗？”<br>“嗯，大概是高中毕业。”<br>“讨厌家，还是学校？”<br>“都一样非常讨厌。”<br>“……”系统里面显示患者是15岁左右，“大概”高中毕业。猜方向是不难的，难的是怎么问才能不让……患者再度对我暴动。<br>拓木见我默不作声地盯着屏幕半晌，好奇地挪过椅子和我坐到同一侧。她顺着我的视线指向年龄那一栏，寂寥的眼神直勾勾地与我对视：“医生你可以直接问的，我唯一的要求只有不告诉家长。”<br>我重重地叹了一口气，“如果你真的不介意那其实你可以再自述一遍经历的。”<br>她第一次愣住了，扭扭捏捏地把自己椅子挪回患者的一侧，身影刻意地躲藏于显示器背后。<br>“有些话就是希望别人开口，如果是狐塚医生的话肯定能懂的吧。”<br>铁皮缝隙间撒入的月光，映照着一双家人的手，冰冷却可靠地抱着我远离故乡。我重重地叹了一口气，“我不否认。”既然是患者的要求，那。<br>“那你把过于冗长的袖子和裤子卷起来让我看看。”<br>她照做了，暴露的四肢遍布红色的伤痕和黑色的粗鄙之语，其中最为密集且尤为扎眼的痕迹是，“病原菌”。翼。我没有由来的想起这个字。<br>“真是又复杂又直接的原因。”<br>“医生，希望你能直接开口。”<br>“……霸凌。你——”<br>拓木塔像耐心的幼师一样，等我慢慢捋清思绪。我得到了肯定的信号，迟疑但笃定地接着说：“你是刻意选择我的吧。”<br>“嗯。发现是同类之后就想，啊是这个人的话一点会懂的吧。”<br>“……先不论你怎么知道的，我可能要让你失望了。我是得到父母的帮助，成功逃脱地狱的案例。而我猜你是两头都不乐意屈服，所以才找到了第三方的我了。”<br>“‘屈服’？医生你很懂嘛，要是你是我的老师就好了！”<br>“老师？有问题还是要老老实实找医生。老师只不过是一伙看门狗。”<br>“所以狐塚医生你成为老师的话，那不就可以帮我了吗，因为我们可是同伴！”<br>话题偏离的太多了。我疲惫地揉了揉鼻梁，试图强行拉回话题“好了事到如今我们还是找出你的心结再——”“作为同伴，把大村翼的一切破坏的连渣都不剩吧！”</p>
]]></content>
      <categories>
        <category>创作</category>
        <category>文字</category>
      </categories>
      <tags>
        <tag>待填坑</tag>
        <tag>肥皂学校</tag>
        <tag>原创</tag>
      </tags>
  </entry>
</search>
