<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/06/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>My New Post</title>
    <url>/2023/06/25/My-New-Post/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>win11 搭建hexo+github以ayer为主题的个人博客</title>
    <url>/2023/06/26/blog/</url>
    <content><![CDATA[<hr>
<pre><code>本教程针对的主题是Ayer,主播建议是选好自己喜欢的主题后再进入看教程。
博客和主题安装部分通用
ayer调教部分以及遇到的bug可供参考
</code></pre>
<hr>
<h3 id="参考的教程"><a href="#参考的教程" class="headerlink" title="参考的教程"></a>参考的教程</h3><ol>
<li><p><a href="https://hexo.io/zh-cn/docs/index.html">hexo官方文档</a> 必看官方文档</p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/60578464">知乎教程</a>大部分步骤来自这里，<del>一部分懒得打字会照抄，</del>主播会省略诸如github注册操作、使用英文名等等程序员基本素养问题，<strong>只提及主要步骤做记录</strong>,有疑问可以具体查看这里</p>
</li>
<li><p><a href="https://shen-yu.gitee.io/2019/ayer/">Ayer主页说明</a>主页个性化设置</p>
</li>
<li><p>*<a href="https://www.bilibili.com/video/BV1KD4y1p7Kg/">B站教程github打包式建站</a>github比较流畅的小伙伴可以试试这个</p>
</li>
</ol>
<p><em>碎碎念</em>：主播wsl2和codespace都试过了，能成功搭建博客但是部署theme都有大大小小的问题，最终win11本地成功搭建模板化的主题，目前商在个性化修改中。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><p>hexo的安装前提是</p>
<ul>
<li><p><a href="nodejs.org/zh-cn">Node.js</a>   nodejs.org&#x2F;zh-cn(安装时自带npm平台)</p>
</li>
<li><p><a href="https://git-scm.com/downloads">Git</a>  <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>（当然以上都可以使用镜像站点下载）</p>
</li>
<li><p><em>说明：</em><br> 如果你细心的看了官方文档那么你会发现它会提及<code>Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本</code>,以及后面附带了一张hexo与Node.js版本一一对应的表格。本人的经验是可以先一律无脑最新版，大部分旧版都兼容。若主题有特殊版本要求建议按照主题的要求来。<del>虽然我没有那么做</del></p>
</li>
</ul>
<p>下载 Node.js 和 Git 程序并安装，一路点 “下一步” 按默认配置完成安装。</p>
<p>安装完成后，Win+R 输入 cmd 并打开，依次输入 node -v、npm -v 和 git –version 并回车，如下图出现程序版本号即可。</p>
<h2 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h2><p>首先你需要准备一个<strong>完全空白的文件夹</strong>（本文假设为blog）来存放hexo的程序文件。新建好后在该文件夹空白处右键选择<code>Git Bash Here</code>,这个选项可能藏在win11的<code>显示更多选项</code>。</p>
<p>npm一键安装hexo程序指令：</p>
<hr>
<pre><code>npm install -g hexo-cli
</code></pre>
<hr>
<p>如果你是mac用户需要<strong>sudo（管理员权限）</strong>来操作，例如：</p>
<hr>
<pre><code>sudo npm install -g hexo-cli
</code></pre>
<hr>
<p>安装时长视网络环境而定，可以考虑挂加速器，请耐心等待</p>
<h2 id="3-link（链接）github"><a href="#3-link（链接）github" class="headerlink" title="3.link（链接）github"></a>3.link（链接）github</h2><p>首先你已经有了一个github的免费账户并且完成了一系列验证。</p>
<p>然后回到你的blog文件夹，依旧是右键<code>Git Bash Here</code>进入到terminal，设置用户名和邮箱；</p>
<hr>
<pre><code>git config --global user.name &quot;你的gitHub 用户名&quot;
git config --global user.email &quot;你的gitHub 邮箱&quot;
（替换双引号内容）
</code></pre>
<hr>
<ul>
<li><em>说明：</em><br> 如果你遇到了<code>error: key does not contain a section: xxx</code>的报错，你可以尝试自己手写命令并输入，或者输入<code>git config --global --edit</code>手动编辑配置文件并保存。</li>
</ul>
<p><strong>然后创建SSH密匙</strong>，无脑回车到程序结束：</p>
<hr>
<pre><code>ssh-keygen -t rsa -C &quot;你的gitHub 邮箱&quot;
</code></pre>
<hr>
<p>完成后，登录github——&gt;选择右侧边栏的总setting——&gt;选择左侧边栏的SSH and GPG keys——&gt;选择New SSH keys——&gt;title取名并且附上——&gt;</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>web类</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>各种使用时新晋语法函数</title>
    <url>/2023/07/12/c++%20grammer%20record%20/</url>
    <content><![CDATA[<h1 id="new-int-m"><a href="#new-int-m" class="headerlink" title="new int[m]"></a>new int[m]</h1><p>例：p[n]为struct,有*time，p[n].time&#x3D;new int[m],time变成int 数组，有m项</p>
<h1 id="auto"><a href="#auto" class="headerlink" title="auto"></a>auto</h1><p>for(auto t:res)cout&lt;&lt;t&lt;&lt;’ ‘;<br>auto res&#x3D;get_di(X);【vector<int> get_di(int n)】</p>
<h1 id="for（int-i-x3D-n-1-i-i–）"><a href="#for（int-i-x3D-n-1-i-i–）" class="headerlink" title="for（int i&#x3D;n-1;~i;i–）"></a>for（int i&#x3D;n-1;~i;i–）</h1><p>在for循环中，<del>i的作用是判断i是否为-1。因为-1的二进制表示是全1，所以</del>(-1)就是全0，也就是0。所以当i等于-1时，~i就为0，循环就会终止。这样可以避免使用&#x3D;&#x3D;或!&#x3D;运算符来比较i和-1。</p>
<h1 id="const-double-eps-x3D-1e-6"><a href="#const-double-eps-x3D-1e-6" class="headerlink" title="const double eps&#x3D;1e-6;"></a>const double eps&#x3D;1e-6;</h1><p>判断浮点数是否为零或者小于零时由于浮点数特性需要判断它是否小于一个很小的数</p>
<h1 id="struct结构体内比较格式"><a href="#struct结构体内比较格式" class="headerlink" title="struct结构体内比较格式"></a>struct结构体内比较格式</h1><h1 id="amp-的传递区别"><a href="#amp-的传递区别" class="headerlink" title="* &amp;的传递区别"></a>* &amp;的传递区别</h1><h1 id="vector传递-高精度计算"><a href="#vector传递-高精度计算" class="headerlink" title="vector传递 高精度计算"></a>vector<int>传递 高精度计算</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vector&lt;int&gt; mul(vector&lt;int&gt; &amp;A, int b)</span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;int&gt; C;</span><br><span class="line">    int t = 0;</span><br><span class="line">    for (int i = 0; i &lt; A.size() || t; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        if (i &lt; A.size()) t += A[i] * b;</span><br><span class="line">        C.push_back(t % 10);</span><br><span class="line">        t /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    while (C.size() &gt; 1 &amp;&amp; C.back() == 0) C.pop_back();</span><br><span class="line">    return C;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    string a;</span><br><span class="line">    int b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    vector&lt;int&gt; A;</span><br><span class="line">    for (int i = a.size() - 1; i &gt;= 0; i -- ) A.push_back(a[i] - &#x27;0&#x27;);</span><br><span class="line">    auto C = mul(A, b);</span><br><span class="line">    for (int i = C.size() - 1; i &gt;= 0; i -- ) printf(&quot;%d&quot;, C[i]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="lower-bound-stk-begin-stk-end-arr-i-x3D-arr-i"><a href="#lower-bound-stk-begin-stk-end-arr-i-x3D-arr-i" class="headerlink" title="*lower_bound(stk.begin(), stk.end(), arr[i]) &#x3D; arr[i]"></a>*lower_bound(stk.begin(), stk.end(), arr[i]) &#x3D; arr[i]</h1><p>它返回一个指向范围 [first, last) 中第一个不小于 val 的元素的迭代器<br>可以替代二分查找</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>算法类</category>
      </categories>
      <tags>
        <tag>acm</tag>
        <tag>算法</tag>
        <tag>训练记录</tag>
      </tags>
  </entry>
</search>
